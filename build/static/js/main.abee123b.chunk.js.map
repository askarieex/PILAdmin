{"version":3,"sources":["redux/storePersist.js","utils/history.jsx","request/codeMessage.js","request/errorHandler.js","request/successHandler.js","auth/auth.service.js","auth/cookie.js","redux/auth/selectors.js","router/PublicRoute.jsx","components/PageLoader/index.jsx","router/AuthRouter.jsx","router/PrivateRoute.jsx","components/DownloadPDFButton.jsx","pages/Admission_appli.jsx","pages/AdmissionDetails.jsx","axiosInstance.js","pages/Message.jsx","pages/Syllabus.jsx","pages/Datesheet.jsx","pages/Contacts.jsx","router/AppRouter.jsx","layout/Navigation/index.jsx","router/index.jsx","redux/auth/reducer.js","redux/crud/types.js","redux/crud/reducer.js","redux/search/types.js","redux/search/reducer.js","redux/rootReducer.js","redux/store.js","app/index.jsx","serviceWorker.jsx","index.jsx","config/serverApiConfig.js","redux/auth/types.js"],"names":["storePersist","set","key","state","window","localStorage","setItem","JSON","stringify","get","result","getItem","parse","remove","removeItem","getAll","clear","createBrowserHistory","codeMessage","errorHandler","error","emptyResult","response","status","message","data","errorText","notification","config","duration","description","jwtExpired","history","push","success","successHandler","url","console","log","login","loginAdminData","a","API_BASE_URL","Date","getTime","axios","post","token","logout","cookieName","getCookie","ACCESS_TOKEN_NAME","cookieValue","authSelect","auth","selectAuth","createSelector","current","isLoggedIn","PublicRoute","Component","component","rest","render","props","authService","to","motion","div","initial","x","animate","exit","scale","PageLoader","className","size","Login","lazy","NotFound","AuthRouter","location","useLocation","fallback","AnimatePresence","exitBeforeEnter","path","exact","pathname","PrivateRoute","type","damping","stiffness","transition","y","opacity","DownloadPDFButton","applicationId","useState","loading","setLoading","handleDownload","replace","fetch","method","headers","Authorization","ok","Error","blob","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","parentNode","removeChild","title","icon","DownloadOutlined","onClick","disabled","style","marginLeft","Search","Input","Option","Select","confirm","Modal","AdmissionAppli","storedTheme","theme","setTheme","admissionData","setAdmissionData","filteredData","setFilteredData","searchTerm","setSearchTerm","statusFilter","setStatusFilter","readFilter","setReadFilter","pageSize","pageSizeOptions","showSizeChanger","showTotal","total","range","pagination","setPagination","useEffect","fetchData","page","fetchedData","totalCount","sortedData","sort","b","createdAt","dataWithSerial","map","item","index","serialNo","prev","baseURL","debouncedSearch","useCallback","debounce","value","filtered","filter","student_name","toLowerCase","includes","father_name","district","applicationStatus","isRead","proceedMarkAsRead","id","put","prevData","_id","columns","dataIndex","text","record","imagePath","student_photo_path","src","UserOutlined","alt","width","align","sorter","localeCompare","fontWeight","color","fontSize","ellipsis","filters","onFilter","class","toLocaleDateString","CheckCircleOutlined","ClockCircleOutlined","CloseCircleOutlined","charAt","toUpperCase","slice","_","EyeOutlined","marginRight","ExclamationCircleOutlined","content","okText","okType","cancelText","onOk","onCancel","padding","backgroundColor","minHeight","borderRadius","boxShadow","display","justifyContent","alignItems","marginBottom","flexWrap","gap","textAlign","flex","textTransform","margin","checked","onChange","newTheme","checkedChildren","unCheckedChildren","placeholder","allowClear","e","target","minWidth","enterButton","suffix","MailOutlined","suffixIcon","tip","dataSource","rowKey","bordered","scroll","rowClassName","sticky","jsx","Title","Typography","fetchApplicationById","password","__v","updateApplicationStatus","AdmissionDetails","useParams","useHistory","application","setApplication","imagePreview","setImagePreview","updatingStatus","setUpdatingStatus","downloading","setDownloading","downloadError","setDownloadError","idError","setIdError","loadData","handleBack","goBack","renderFilePreview","label","filePath","fullPath","xs","sm","lg","hoverable","cursor","onMouseEnter","currentTarget","transform","onMouseLeave","endsWith","FilePdfOutlined","maxHeight","objectFit","preview","marginTop","handleApprove","updatedApplication","placement","handleReject","handleDownloadAdmitCard","downloadUrl","responseType","revokeObjectURL","ArrowLeftOutlined","showIcon","maxWidth","renderStatusAlert","gutter","justify","onConfirm","borderColor","danger","renderStatusActions","undefined","email","level","getStatusBadge","column","Item","dob","day","month","year","blood_group","pen_no","residence","village","tehsil","father_profession","father_contact","mother_name","mother_profession","mother_contact","guardian_name","guardian_profession","dob_certificate_path","blood_report_path","aadhar_card_path","passport_photos_path","marks_certificate_path","school_leaving_cert_path","visible","footer","centered","axiosInstance","create","interceptors","request","use","AntMessage","Promise","reject","Content","Layout","truncateText","wordLimit","words","split","length","join","MessageManagement","messageList","setMessageList","isModalVisible","setIsModalVisible","editingMessage","setEditingMessage","Form","useForm","form","submitLoading","setSubmitLoading","viewModalVisible","setViewModalVisible","selectedMessage","setSelectedMessage","setError","classOptions","fetchMessages","sentAt","onFinish","values","resetFields","handleCloseViewModal","responsive","handleViewMessage","sentBy","cls","targetAudience","toLocaleString","EditOutlined","setFieldsValue","handleEdit","DeleteOutlined","delete","background","PlusOutlined","destroyOnClose","layout","initialValues","name","rules","required","TextArea","rows","htmlType","Syllabus","syllabusList","setSyllabusList","editingSyllabus","setEditingSyllabus","fetchSyllabus","pdf","originFileObj","formData","FormData","append","rel","uid","pdfUrl","valuePropName","getValueFromEvent","fileList","beforeUpload","accept","listType","maxCount","UploadOutlined","block","Datesheet","datesheetList","setDatesheetList","editingDatesheet","setEditingDatesheet","fetchDatesheets","examName","fullUrl","Array","isArray","Contacts","contacts","setContacts","selectedContact","setSelectedContact","fetchContacts","handleCloseModal","subject","closable","onClose","Dashboard","Admin","Logout","AppRouter","Admission_appli","Message","Sider","Navigation","collapsed","setCollapsed","collapsible","onCollapse","zIndex","height","overflow","defaultSelectedKeys","mode","DashboardOutlined","FileSyncOutlined","SettingOutlined","Router","useSelector","INITIAL_STATE","authReducer","action","actionTypes","payload","RESET_STATE","CURRENT_ITEM","REQUEST_LOADING","REQUEST_SUCCESS","REQUEST_FAILED","CURRENT_ACTION","RESET_ACTION","INITIAL_KEY_STATE","isLoading","isSuccess","list","items","update","read","search","crudReducer","keyState","INIT_STATE","CURRENT_SELECTED","RESET_REF","INITIAL_REF_STATE","selected","searchReducer","newState","refKey","appReducer","combineReducers","crud","rootReducer","middleware","createLogger","thunk","configStore","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","initialState","store","createStore","App","Boolean","hostname","match","process","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","FAILED_REQUEST","LOADING_REQUEST","LOGIN_SUCCESS","LOGOUT_SUCCESS"],"mappings":"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","file":"static/js/main.abee123b.chunk.js","sourcesContent":["export const storePersist = {\r\n  set: (key, state) => {\r\n    window.localStorage.setItem(key, JSON.stringify(state));\r\n  },\r\n  get: (key) => {\r\n    const result = window.localStorage.getItem(key);\r\n    return JSON.parse(result);\r\n  },\r\n  remove: (key) => {\r\n    window.localStorage.removeItem(key);\r\n  },\r\n  getAll: () => {\r\n    return window.localStorage;\r\n  },\r\n  clear: () => {\r\n    window.localStorage.clear();\r\n  },\r\n};\r\n\r\nexport default storePersist;\r\n","import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();\r\n","const codeMessage = {\r\n  200: \"The server successfully returned the requested data. \",\r\n  201: \"Create or modify data successfully. \",\r\n  202: \"A request has entered the background queue (asynchronous task). \",\r\n  204: \"Delete data successfully. \",\r\n  400: \"There was an error in the request sent, and the server did not create or modify data. \",\r\n  401: \"The admin does not have permission please try to login again. \",\r\n  403: \"The admin is authorized, but access is forbidden. \",\r\n  404: \"The request sent is for a record that does not exist, and the server is not operating. \",\r\n  406: \"The requested format is not available. \",\r\n  410: \"The requested resource has been permanently deleted and will no longer be available. \",\r\n  422: \"When creating an object, a validation error occurred. \",\r\n  500: \"An error occurred in the server, please check the server. \",\r\n  502: \"Gateway error. \",\r\n  503: \"The service is unavailable, the server is temporarily overloaded or maintained. \",\r\n  504: \"The gateway has timed out. \",\r\n};\r\n\r\nexport default codeMessage;\r\n","import { notification } from \"antd\";\r\nimport history from \"@/utils/history\";\r\nimport codeMessage from \"./codeMessage\";\r\n\r\nconst errorHandler = (error, emptyResult = null) => {\r\n  const { response } = error;\r\n\r\n  if (!response) {\r\n    // notification.config({\r\n    //   duration: 20,\r\n    // });\r\n    // notification.error({\r\n    //   message: \"No internet connection\",\r\n    //   description: \"Cannot connect to the server, Check your internet network\",\r\n    // });\r\n    return {\r\n      success: false,\r\n      result: emptyResult,\r\n      message: \"Cannot connect to the server, Check your internet network\",\r\n    };\r\n  } else if (response && response.status) {\r\n    const message = response.data && response.data.message;\r\n    const errorText = message || codeMessage[response.status];\r\n    const { status } = response;\r\n    notification.config({\r\n      duration: 20,\r\n    });\r\n    notification.error({\r\n      message: `Request error ${status}`,\r\n      description: errorText,\r\n    });\r\n    if (error.response.data.jwtExpired) {\r\n      history.push(\"/logout\");\r\n    }\r\n    return response.data;\r\n  } else {\r\n    notification.config({\r\n      duration: 20,\r\n    });\r\n    notification.error({\r\n      message: \"Unknown Error\",\r\n      description: \"An unknown error occurred in the app, please try again. \",\r\n    });\r\n    return {\r\n      success: false,\r\n      result: emptyResult,\r\n      message: \"An unknown error occurred in the app, please try again. \",\r\n    };\r\n  }\r\n};\r\n\r\nexport default errorHandler;\r\n","import { notification } from \"antd\";\r\n\r\nimport codeMessage from \"./codeMessage\";\r\n\r\nconst successHandler = (response, typeNotification = {}) => {\r\n  if (!response.data.result) {\r\n    response = {\r\n      ...response,\r\n      status: 404,\r\n      url: null,\r\n      data: {\r\n        success: false,\r\n        result: null,\r\n      },\r\n    };\r\n  }\r\n  const { data } = response;\r\n  if (data.success === false) {\r\n    const message = data && data.message;\r\n    const errorText = message || codeMessage[response.status];\r\n    const { status } = response;\r\n    notification.config({\r\n      duration: 20,\r\n    });\r\n    notification.error({\r\n      message: `Request error ${status}`,\r\n      description: errorText,\r\n    });\r\n  } else {\r\n    const message = data && data.message;\r\n    const successText = message || codeMessage[response.status];\r\n    const { status } = response;\r\n    // notification.config({\r\n    //   duration: 20,\r\n    // });\r\n    // notification.success({\r\n    //   message: `Request success`,\r\n    //   description: successText,\r\n    // });\r\n  }\r\n\r\n  return data;\r\n};\r\n\r\nexport default successHandler;\r\n","import { API_BASE_URL, ACCESS_TOKEN_NAME } from \"@/config/serverApiConfig\";\r\n\r\nimport axios from \"axios\";\r\nimport errorHandler from \"@/request/errorHandler\";\r\nimport successHandler from \"@/request/successHandler\";\r\nimport storePersist from \"@/redux/storePersist\";\r\n\r\nimport { getCookie, setCookie, deleteCookie } from \"./cookie\";\r\nconsole.log(\"Askery Mlaik\");\r\nexport const login = async (loginAdminData) => {\r\n  try {\r\n    console.log( API_BASE_URL + `login?timestamp=${new Date().getTime()}`)\r\n    const response = await axios.post(\r\n      API_BASE_URL + `login?timestamp=${new Date().getTime()}`,\r\n      loginAdminData\r\n    );\r\n    \r\n    token.set(response.data.result.token);\r\n    console.log(\"_____________\");\r\n    console.log(response);\r\n    console.log(\"_____________\");\r\n    return successHandler(response);\r\n  } catch (error) {\r\n    return errorHandler(error);\r\n  }\r\n};\r\n\r\nexport const logout = () => {\r\n  token.remove();\r\n  storePersist.clear();\r\n};\r\n\r\nexport const token = {\r\n  get: () => {\r\n    return getCookie(ACCESS_TOKEN_NAME);\r\n  },\r\n  set: (token) => {\r\n    return setCookie(ACCESS_TOKEN_NAME, token);\r\n  },\r\n  remove: () => {\r\n    return deleteCookie(ACCESS_TOKEN_NAME);\r\n  },\r\n};\r\n","// export function getCookie(cookieName) {\r\n//   let name = cookieName + \"=\";\r\n//   let ca = document.cookie.split(\";\");\r\n//   for (let i = 0; i < ca.length; i++) {\r\n//     let c = ca[i];\r\n//     while (c.charAt(0)===\" \") {\r\n//       c = c.substring(1);\r\n//     }\r\n//     if (c.indexOf(name)===0) {\r\n//       return c.substring(name.length, c.length);\r\n//     }\r\n//   }\r\n//   return \"\";\r\n// }\r\n\r\n// export function setCookie(cookieName, cookieValue, expireDays = 1) {\r\n//   let d = new Date();\r\n//   d.setTime(d.getTime() + expireDays * 24 * 60 * 60 * 1000);\r\n//   let expires = \"expires=\" + d.toUTCString();\r\n//   document.cookie = cookieName + \"=\" + cookieValue + \";\" + expires + \";path=/\";\r\n// }\r\n\r\n// export function deleteCookie(cookieName) {\r\n//   document.cookie = cookieName + \"=; Max-Age=-99999999; \";\r\n//   return true;\r\n// }\r\n\r\nexport function setCookie(cookieName, cookieValue) {\r\n  window.localStorage.setItem(cookieName, JSON.stringify(cookieValue));\r\n}\r\nexport function getCookie(cookieName) {\r\n  const result = window.localStorage.getItem(cookieName);\r\n  return JSON.parse(result);\r\n}\r\nexport function deleteCookie(cookieName) {\r\n  window.localStorage.removeItem(cookieName);\r\n  return true;\r\n}\r\n","import { createSelector } from \"reselect\";\r\nconst authSelect = (state) => state.auth;\r\n\r\nexport const selectAuth = createSelector([authSelect], (auth) => auth);\r\nexport const selectCurrentAdmin = createSelector(\r\n  [authSelect],\r\n  (auth) => auth.current\r\n);\r\n\r\nexport const isLoggedIn = createSelector(\r\n  [authSelect],\r\n  (auth) => auth.isLoggedIn\r\n);\r\n","import React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport * as authService from \"@/auth\";\r\n\r\nconst PublicRoute = ({ component: Component, ...rest }) => {\r\n  return (\r\n    // Show the component only when the admin is logged in\r\n    // Otherwise, redirect the admin to /signin page\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        authService.token.get() ? (\r\n          <Redirect to=\"/\" />\r\n        ) : (\r\n          <motion.div\r\n            initial={{ x: 200 }}\r\n            animate={{ x: 0 }}\r\n            exit={{ scale: 0 }}\r\n          >\r\n            <Component {...props} />\r\n          </motion.div>\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PublicRoute;\r\n","import React from \"react\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst PageLoader = () => {\r\n  return (\r\n    <div className=\"center\">\r\n      <Spin size=\"large\" />\r\n    </div>\r\n  );\r\n};\r\nexport default PageLoader;\r\n","import React, { lazy, Suspense } from \"react\";\r\nimport { Redirect, Route, Switch, useLocation } from \"react-router-dom\";\r\nimport { AnimatePresence } from \"framer-motion\";\r\nimport PublicRoute from \"./PublicRoute\";\r\nimport PageLoader from \"@/components/PageLoader\";\r\n\r\nconst Login = lazy(() =>\r\n  import(/*webpackChunkName:'LoginPage'*/ \"@/pages/Login\")\r\n);\r\n\r\nconst NotFound = lazy(() =>\r\n  import(/*webpackChunkName:'NotFoundPage'*/ \"@/pages/NotFound\")\r\n);\r\n\r\nexport default function AuthRouter() {\r\n  const location = useLocation();\r\n  return (\r\n    <Suspense fallback={<PageLoader />}>\r\n      <AnimatePresence exitBeforeEnter initial={false}>\r\n        <Switch location={location} key={location.pathname}>\r\n          <PublicRoute\r\n            path=\"/\"\r\n            component={Login}\r\n            render={() => <Redirect to=\"/login\" />}\r\n          />\r\n          <PublicRoute component={Login} path=\"/login\" exact />\r\n          <Route\r\n            path=\"*\"\r\n            component={NotFound}\r\n            render={() => <Redirect to=\"/notfound\" />}\r\n          />\r\n        </Switch>\r\n      </AnimatePresence>\r\n    </Suspense>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nimport * as authService from \"@/auth\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const config = {\r\n    type: \"spring\",\r\n    damping: 20,\r\n    stiffness: 100,\r\n  };\r\n  return (\r\n    // Show the component only when the admin is logged in\r\n    // Otherwise, redirect the admin to /signin page\r\n\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        authService.token.get() ? (\r\n          <motion.div\r\n            transition={config}\r\n            initial={{ y: 20, opacity: 0 }}\r\n            animate={{ y: 0, opacity: 1 }}\r\n            exit={{ y: -20, opacity: 0 }}\r\n          >\r\n            <Component {...props} />\r\n          </motion.div>\r\n        ) : (\r\n          <Redirect to=\"/login\" />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","// src/components/DownloadPDFButton.jsx\r\nimport React, { useState } from \"react\";\r\nimport { Button, Tooltip, message, Spin } from \"antd\";\r\nimport { DownloadOutlined } from \"@ant-design/icons\";\r\n\r\n/**\r\n * Button component to download admission application as a PDF.\r\n *\r\n * @param {Object} props\r\n * @param {string} props.applicationId - The ID of the admission application.\r\n */\r\nfunction DownloadPDFButton({ applicationId }) {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleDownload = async () => {\r\n    setLoading(true);\r\n    try {\r\n      let token = localStorage.getItem(\"x-auth-token\");\r\n      if (token) {\r\n        token = token.replace(/^\"|\"$/g, \"\"); // Clean the token\r\n      } else {\r\n        message.error(\"Authorization token not found. Please log in.\");\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      const response = await fetch(\r\n        `http://localhost:3001/api/admin/admissionApplication/${applicationId}/downloadPDF`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to download PDF.\");\r\n      }\r\n\r\n      const blob = await response.blob();\r\n      const url = window.URL.createObjectURL(new Blob([blob]));\r\n      const link = document.createElement(\"a\");\r\n      link.href = url;\r\n      link.setAttribute(\"download\", `application_${applicationId}.pdf`);\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      link.parentNode.removeChild(link);\r\n      message.success(\"PDF downloaded successfully.\");\r\n    } catch (error) {\r\n      console.error(\"Error downloading PDF:\", error);\r\n      message.error(\"Failed to download PDF.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Tooltip title=\"Download Application as PDF\">\r\n      <Button\r\n        type=\"default\"\r\n        icon={loading ? <Spin size=\"small\" /> : <DownloadOutlined />}\r\n        onClick={handleDownload}\r\n        disabled={loading}\r\n        style={{ marginLeft: \"8px\" }}\r\n      >\r\n        {loading ? \"Downloading...\" : \"Download PDF\"}\r\n      </Button>\r\n    </Tooltip>\r\n  );\r\n}\r\n\r\nexport default DownloadPDFButton;\r\n","// ./src/pages/Admission_appli.jsx\r\n\r\nimport React, { useEffect, useState, useCallback } from \"react\";\r\nimport {\r\n  Table,\r\n  Button,\r\n  Card,\r\n  Avatar,\r\n  Spin,\r\n  message,\r\n  Input,\r\n  Tag,\r\n  Select,\r\n  Tooltip,\r\n  Modal,\r\n  Switch, // Import Switch from Ant Design\r\n} from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  UserOutlined,\r\n  EyeOutlined,\r\n  DownloadOutlined,\r\n  CheckCircleOutlined,\r\n  ClockCircleOutlined,\r\n  CloseCircleOutlined,\r\n  MailOutlined,\r\n  ExclamationCircleOutlined,\r\n} from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\nimport debounce from \"lodash.debounce\";\r\n\r\nimport DownloadPDFButton from \"../components/DownloadPDFButton\";\r\n\r\nconst { Search } = Input;\r\nconst { Option } = Select;\r\nconst { confirm } = Modal;\r\n\r\n/**\r\n * Component to display and manage admission applications.\r\n */\r\nfunction AdmissionAppli() {\r\n  // Theme state: 'light' or 'dark'\r\n  const [theme, setTheme] = useState(() => {\r\n    // Initialize theme from localStorage or default to 'light'\r\n    const storedTheme = localStorage.getItem(\"app-theme\");\r\n    return storedTheme ? storedTheme : \"light\";\r\n  });\r\n\r\n  const [admissionData, setAdmissionData] = useState([]); // Full data\r\n  const [filteredData, setFilteredData] = useState([]); // Filtered data for display\r\n  const [loading, setLoading] = useState(true);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [statusFilter, setStatusFilter] = useState(null); // For status-based filtering\r\n  const [readFilter, setReadFilter] = useState(null); // For read/unread filtering\r\n  const [pagination, setPagination] = useState({\r\n    current: 1,\r\n    pageSize: 20,\r\n    pageSizeOptions: [\"10\", \"20\", \"50\", \"100\"],\r\n    showSizeChanger: true,\r\n    showTotal: (total, range) =>\r\n      `${range[0]}-${range[1]} of ${total} applications`,\r\n  });\r\n\r\n  // Retrieve token from localStorage and clean it\r\n  let token = localStorage.getItem(\"x-auth-token\");\r\n  if (token) {\r\n    token = token.replace(/^\"|\"$/g, \"\"); // Remove any surrounding quotes\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchData(pagination.current, pagination.pageSize);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [token]);\r\n\r\n  /**\r\n   * Fetch admission applications from the backend.\r\n   * @param {number} page - Current page number.\r\n   * @param {number} pageSize - Number of items per page.\r\n   */\r\n  const fetchData = async (page, pageSize) => {\r\n    setLoading(true);\r\n    try {\r\n      if (!token) {\r\n        console.error(\"No token found in localStorage.\");\r\n        message.error(\"You are not authorized. Please log in first.\");\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      // Fetch data from backend with pagination parameters\r\n      const response = await axios.get(\r\n        `https://api-pil.site/api/admin/admissionApplications?page=${page}&limit=${pageSize}`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n\r\n      // Ensure response contains an array under 'data' and total count\r\n      const fetchedData = response.data?.data || [];\r\n      const totalCount = response.data?.total || 0;\r\n\r\n      // Sort by newest first based on createdAt\r\n      const sortedData = fetchedData.sort(\r\n        (a, b) => new Date(b.createdAt) - new Date(a.createdAt)\r\n      );\r\n\r\n      // Add serial numbers dynamically to the data\r\n      const dataWithSerial = sortedData.map((item, index) => ({\r\n        ...item,\r\n        serialNo: (page - 1) * pageSize + index + 1,\r\n      }));\r\n\r\n      setAdmissionData(dataWithSerial);\r\n      setFilteredData(dataWithSerial);\r\n      setPagination((prev) => ({\r\n        ...prev,\r\n        total: totalCount,\r\n      }));\r\n      // Optionally, remove the success message to avoid clutter\r\n      // message.success(\"Admission applications loaded successfully.\");\r\n    } catch (error) {\r\n      console.error(\"Error fetching admission data:\", error);\r\n      message.error(\"Failed to load admission applications.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Backend Base URL where the images are hosted\r\n  const baseURL = \"https://api-pil.site/\";\r\n\r\n  // Debounced search handler to optimize performance\r\n  const debouncedSearch = useCallback(\r\n    debounce((value) => {\r\n      setSearchTerm(value);\r\n    }, 300),\r\n    []\r\n  );\r\n\r\n  // Live Search and Filter Functionality\r\n  useEffect(() => {\r\n    let filtered = admissionData;\r\n\r\n    // Apply search filter\r\n    if (searchTerm) {\r\n      filtered = filtered.filter(\r\n        (item) =>\r\n          item.student_name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n          item.father_name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n          item.district.toLowerCase().includes(searchTerm.toLowerCase())\r\n      );\r\n    }\r\n\r\n    // Apply status filter\r\n    if (statusFilter) {\r\n      filtered = filtered.filter(\r\n        (item) =>\r\n          item.applicationStatus.toLowerCase() === statusFilter.toLowerCase()\r\n      );\r\n    }\r\n\r\n    // Apply read/unread filter\r\n    if (readFilter) {\r\n      if (readFilter === \"read\") {\r\n        filtered = filtered.filter((item) => item.isRead === true);\r\n      } else if (readFilter === \"unread\") {\r\n        filtered = filtered.filter((item) => item.isRead === false);\r\n      }\r\n    }\r\n\r\n    setFilteredData(filtered);\r\n    // Reset to first page if filters change\r\n    setPagination((prev) => ({\r\n      ...prev,\r\n      current: 1,\r\n    }));\r\n  }, [searchTerm, statusFilter, readFilter, admissionData]);\r\n\r\n  /**\r\n   * Handle table change events like pagination, sorting, and filtering.\r\n   * @param {Object} pagination - Pagination object.\r\n   * @param {Object} filters - Applied filters.\r\n   * @param {Object} sorter - Applied sorter.\r\n   */\r\n  const handleTableChange = (pagination, filters, sorter) => {\r\n    setPagination(pagination);\r\n    // Fetch new data based on pagination\r\n    fetchData(pagination.current, pagination.pageSize);\r\n  };\r\n\r\n  /**\r\n   * Handler for downloading important files.\r\n   * @param {Object} record - The application record.\r\n   */\r\n  const handleDownloadFiles = (record) => {\r\n    if (!record._id) {\r\n      message.error(\"Invalid application ID.\");\r\n      return;\r\n    }\r\n\r\n    // Redirect to the backend endpoint to download files\r\n    window.location.href = `${baseURL}api/admin/admissionApplication/${record._id}/downloadFiles`;\r\n  };\r\n\r\n  /**\r\n   * Handler for marking an application as read with confirmation.\r\n   * @param {string} id - Application ID.\r\n   */\r\n  const markAsRead = (id) => {\r\n    confirm({\r\n      title: \"Mark as Read\",\r\n      icon: <ExclamationCircleOutlined />,\r\n      content: \"Are you sure you want to mark this application as read?\",\r\n      okText: \"Yes\",\r\n      okType: \"primary\",\r\n      cancelText: \"No\",\r\n      onOk() {\r\n        // Proceed to mark as read\r\n        proceedMarkAsRead(id);\r\n      },\r\n      onCancel() {\r\n        // Do nothing\r\n      },\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Proceed with marking the application as read.\r\n   * @param {string} id - Application ID.\r\n   */\r\n  const proceedMarkAsRead = async (id) => {\r\n    try {\r\n      await axios.put(\r\n        `https://api-pil.site/api/admin/admissionApplication/${id}/markAsRead`,\r\n        {},\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n\r\n      // Update local state\r\n      setAdmissionData((prevData) =>\r\n        prevData.map((item) =>\r\n          item._id === id ? { ...item, isRead: true } : item\r\n        )\r\n      );\r\n      message.success(\"Application marked as read.\");\r\n    } catch (error) {\r\n      console.error(\"Error marking application as read:\", error);\r\n      message.error(\"Failed to mark application as read.\");\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Toggle between light and dark themes.\r\n   */\r\n  const toggleTheme = (checked) => {\r\n    const newTheme = checked ? \"dark\" : \"light\";\r\n    setTheme(newTheme);\r\n    localStorage.setItem(\"app-theme\", newTheme);\r\n  };\r\n\r\n  // Table columns configuration\r\n  const columns = [\r\n    {\r\n      title: \"Profile\",\r\n      dataIndex: \"student_photo_path\",\r\n      key: \"student_photo_path\",\r\n      render: (text, record) => {\r\n        const imagePath = record.student_photo_path\r\n          ? `${baseURL}${record.student_photo_path.replace(/\\\\/g, \"/\")}`\r\n          : null;\r\n\r\n        return (\r\n          <Avatar\r\n            src={imagePath}\r\n            icon={!imagePath && <UserOutlined />}\r\n            size=\"large\"\r\n            alt=\"Student Photo\"\r\n          />\r\n        );\r\n      },\r\n      width: 100,\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Student Name\",\r\n      dataIndex: \"student_name\",\r\n      key: \"student_name\",\r\n      sorter: (a, b) => a.student_name.localeCompare(b.student_name),\r\n      render: (text, record) => (\r\n        <span\r\n          style={{\r\n            fontWeight: record.isRead ? \"normal\" : \"bold\",\r\n            color: theme === \"light\" ? \"#1890ff\" : \"#91d5ff\",\r\n            fontSize: \"16px\",\r\n          }}\r\n        >\r\n          {text}\r\n        </span>\r\n      ),\r\n      ellipsis: true,\r\n      width: 180,\r\n    },\r\n    {\r\n      title: \"Class\",\r\n      dataIndex: \"class\",\r\n      key: \"class\",\r\n      render: (text) => (\r\n        <span\r\n          style={{\r\n            color: theme === \"light\" ? \"#1890ff\" : \"#91d5ff\",\r\n            fontSize: \"14px\",\r\n          }}\r\n        >\r\n          {text}\r\n        </span>\r\n      ),\r\n      filters: [\r\n        { text: \"10\", value: \"10\" },\r\n        { text: \"12\", value: \"12\" },\r\n        { text: \"Other\", value: \"Other\" },\r\n      ],\r\n      onFilter: (value, record) => record.class === value,\r\n      ellipsis: true,\r\n      width: 100,\r\n    },\r\n    {\r\n      title: \"Father's Name\",\r\n      dataIndex: \"father_name\",\r\n      key: \"father_name\",\r\n      sorter: (a, b) => a.father_name.localeCompare(b.father_name),\r\n      render: (text, record) => (\r\n        <span\r\n          style={{\r\n            fontWeight: record.isRead ? \"normal\" : \"bold\",\r\n            fontSize: \"14px\",\r\n            color: theme === \"light\" ? \"#000\" : \"#fff\",\r\n          }}\r\n        >\r\n          {text}\r\n        </span>\r\n      ),\r\n      ellipsis: true,\r\n      width: 180,\r\n    },\r\n    {\r\n      title: \"District\",\r\n      dataIndex: \"district\",\r\n      key: \"district\",\r\n      sorter: (a, b) => a.district.localeCompare(b.district),\r\n      filters: [\r\n        { text: \"District A\", value: \"District A\" },\r\n        { text: \"District B\", value: \"District B\" },\r\n        { text: \"District C\", value: \"District C\" },\r\n        // Add more districts as needed\r\n      ],\r\n      onFilter: (value, record) => record.district === value,\r\n      ellipsis: true,\r\n      width: 150,\r\n    },\r\n    {\r\n      title: \"Date Submitted\",\r\n      dataIndex: \"createdAt\",\r\n      key: \"createdAt\",\r\n      sorter: (a, b) => new Date(a.createdAt) - new Date(b.createdAt),\r\n      render: (text) => new Date(text).toLocaleDateString(),\r\n      ellipsis: true,\r\n      width: 150,\r\n    },\r\n    {\r\n      title: \"Status\",\r\n      dataIndex: \"applicationStatus\",\r\n      key: \"applicationStatus\",\r\n      filters: [\r\n        { text: \"Approved\", value: \"approved\" },\r\n        { text: \"Pending\", value: \"pending\" },\r\n        { text: \"Rejected\", value: \"rejected\" },\r\n      ],\r\n      onFilter: (value, record) =>\r\n        record.applicationStatus.toLowerCase() === value.toLowerCase(),\r\n      sorter: (a, b) =>\r\n        a.applicationStatus.localeCompare(b.applicationStatus),\r\n      render: (status) => {\r\n        let color;\r\n        let icon;\r\n        switch (status.toLowerCase()) {\r\n          case \"approved\":\r\n            color = \"green\";\r\n            icon = <CheckCircleOutlined />;\r\n            break;\r\n          case \"pending\":\r\n            color = \"orange\";\r\n            icon = <ClockCircleOutlined />;\r\n            break;\r\n          case \"rejected\":\r\n            color = \"red\";\r\n            icon = <CloseCircleOutlined />;\r\n            break;\r\n          default:\r\n            color = \"blue\";\r\n            icon = <UserOutlined />;\r\n        }\r\n        return (\r\n          <Tag color={color} icon={icon} key={status}>\r\n            {status.charAt(0).toUpperCase() + status.slice(1)}\r\n          </Tag>\r\n        );\r\n      },\r\n      ellipsis: true,\r\n      width: 130,\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      key: \"action\",\r\n      render: (_, record) => (\r\n        <>\r\n          <Tooltip title=\"View Details\">\r\n            <Link to={`/admission/${record._id}`}>\r\n              <Button\r\n                type=\"primary\"\r\n                icon={<EyeOutlined />}\r\n                size=\"middle\"\r\n                style={{ marginRight: \"10px\" }}\r\n                onClick={() => {\r\n                  if (!record.isRead) {\r\n                    markAsRead(record._id);\r\n                  }\r\n                }}\r\n                aria-label={`View details of ${record.student_name}`}\r\n              >\r\n                View\r\n              </Button>\r\n            </Link>\r\n          </Tooltip>\r\n\r\n          {/* Download PDF Button with Tooltip */}\r\n          <Tooltip title=\"Download PDF\">\r\n            <DownloadPDFButton applicationId={record._id} />\r\n          </Tooltip>\r\n        </>\r\n      ),\r\n      ellipsis: true,\r\n      width: 150,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        padding: \"30px\",\r\n        backgroundColor: theme === \"light\" ? \"#f0f2f5\" : \"#121212\",\r\n        minHeight: \"100vh\",\r\n        transition: \"background-color 0.3s ease\",\r\n      }}\r\n    >\r\n      <Card\r\n        style={{\r\n          borderRadius: \"12px\",\r\n          boxShadow: \"0 4px 12px rgba(0,0,0,0.1)\",\r\n          backgroundColor: theme === \"light\" ? \"#ffffff\" : \"#1e1e1e\",\r\n          color: theme === \"light\" ? \"#000000\" : \"#ffffff\",\r\n          transition: \"background-color 0.3s ease, color 0.3s ease\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n            marginBottom: \"30px\",\r\n            flexWrap: \"wrap\",\r\n            gap: \"20px\",\r\n          }}\r\n        >\r\n          <h1\r\n            style={{\r\n              textAlign: \"center\",\r\n              flex: \"1 1 100%\",\r\n              fontWeight: \"bold\",\r\n              color: theme === \"light\" ? \"#1890ff\" : \"#91d5ff\",\r\n              fontSize: \"28px\",\r\n              textTransform: \"uppercase\",\r\n              margin: \"0\",\r\n            }}\r\n          >\r\n            Admission Applications\r\n          </h1>\r\n\r\n          {/* Theme Toggle Switch */}\r\n          <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n            <span\r\n              style={{\r\n                marginRight: \"8px\",\r\n                color: theme === \"light\" ? \"#000\" : \"#fff\",\r\n                fontWeight: \"500\",\r\n              }}\r\n            >\r\n              {theme === \"light\" ? \"Light\" : \"Dark\"} Mode\r\n            </span>\r\n            <Switch\r\n              checked={theme === \"dark\"}\r\n              onChange={toggleTheme}\r\n              checkedChildren=\"🌙\"\r\n              unCheckedChildren=\"🔆\"\r\n              aria-label=\"Toggle theme\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Search and Filter Section */}\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            marginBottom: \"25px\",\r\n            flexWrap: \"wrap\",\r\n            gap: \"20px\",\r\n          }}\r\n        >\r\n          <Search\r\n            placeholder=\"Search by Student Name, Father's Name, or District\"\r\n            allowClear\r\n            onChange={(e) => debouncedSearch(e.target.value)}\r\n            style={{ width: \"60%\", minWidth: \"250px\" }}\r\n            size=\"large\"\r\n            enterButton\r\n            suffix={<MailOutlined />}\r\n            aria-label=\"Search applications\"\r\n          />\r\n\r\n          <Select\r\n            allowClear\r\n            placeholder=\"Filter by Status\"\r\n            onChange={(value) => setStatusFilter(value)}\r\n            style={{ width: \"25%\", minWidth: \"200px\" }}\r\n            size=\"large\"\r\n            suffixIcon={<MailOutlined />}\r\n            aria-label=\"Filter by application status\"\r\n          >\r\n            <Option value=\"approved\">Approved</Option>\r\n            <Option value=\"pending\">Pending</Option>\r\n            <Option value=\"rejected\">Rejected</Option>\r\n          </Select>\r\n\r\n          <Select\r\n            allowClear\r\n            placeholder=\"Filter by Read Status\"\r\n            onChange={(value) => setReadFilter(value)}\r\n            style={{ width: \"25%\", minWidth: \"200px\" }}\r\n            size=\"large\"\r\n            suffixIcon={<MailOutlined />}\r\n            aria-label=\"Filter by read status\"\r\n          >\r\n            <Option value=\"read\">Read</Option>\r\n            <Option value=\"unread\">Unread</Option>\r\n          </Select>\r\n        </div>\r\n\r\n        {/* Table Section */}\r\n        {loading ? (\r\n          <div style={{ textAlign: \"center\", padding: \"100px 0\" }}>\r\n            <Spin size=\"large\" tip=\"Loading applications...\" />\r\n          </div>\r\n        ) : (\r\n          <Table\r\n            columns={columns}\r\n            dataSource={filteredData}\r\n            rowKey=\"_id\"\r\n            pagination={pagination}\r\n            bordered\r\n            size=\"middle\"\r\n            scroll={{ x: \"max-content\", y: 600 }}\r\n            rowClassName={(record) =>\r\n              record.isRead\r\n                ? record.applicationStatus.toLowerCase() === \"approved\"\r\n                  ? \"table-row-approved\"\r\n                  : record.applicationStatus.toLowerCase() === \"rejected\"\r\n                  ? \"table-row-rejected\"\r\n                  : \"table-row-pending\"\r\n                : \"table-row-unread\"\r\n            }\r\n            onChange={handleTableChange}\r\n            // Fixed Header for better navigation\r\n            sticky\r\n          />\r\n        )}\r\n      </Card>\r\n\r\n      {/* Custom Styles */}\r\n      <style jsx=\"true\">{`\r\n        .table-row-approved {\r\n          background-color: #ffffff !important;\r\n        }\r\n\r\n        .table-row-pending {\r\n          background-color: #fffbe6 !important;\r\n        }\r\n\r\n        .table-row-rejected {\r\n          background-color: #fff1f0 !important;\r\n        }\r\n\r\n        .table-row-unread {\r\n          background-color: ${\r\n            theme === \"light\" ? \"#f2f6fc\" : \"#1f1f1f\"\r\n          } !important; /* Light blue for unread in light mode, dark gray for dark mode */\r\n          position: relative;\r\n        }\r\n\r\n        /* Hover Effect */\r\n        .ant-table-tbody > tr:hover > td {\r\n          background: ${\r\n            theme === \"light\" ? \"#f5f5f5\" : \"#333333\"\r\n          } !important;\r\n        }\r\n\r\n        /* Pulse Animation for Unread Indicator */\r\n        @keyframes pulse {\r\n          0% {\r\n            transform: scale(0.8);\r\n            opacity: 1;\r\n          }\r\n          100% {\r\n            transform: scale(1.4);\r\n            opacity: 0;\r\n          }\r\n        }\r\n\r\n        /* Apply pulse animation */\r\n        .table-row-unread div span {\r\n          animation: pulse 2s infinite;\r\n        }\r\n\r\n        /* Responsive adjustments */\r\n        @media (max-width: 768px) {\r\n          .ant-table-thead > tr > th {\r\n            font-size: 12px;\r\n          }\r\n\r\n          .ant-table-tbody > tr > td {\r\n            font-size: 12px;\r\n          }\r\n\r\n          .ant-input-search {\r\n            width: 100% !important;\r\n          }\r\n\r\n          .ant-select {\r\n            width: 100% !important;\r\n          }\r\n\r\n          h1 {\r\n            font-size: 22px !important;\r\n          }\r\n        }\r\n      `}</style>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdmissionAppli;\r\n","// ./src/pages/admission/AdmissionDetails.js\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  Descriptions,\r\n  Avatar,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Typography,\r\n  Spin,\r\n  Divider,\r\n  Tag,\r\n  Modal,\r\n  Image,\r\n  Alert,\r\n  notification,\r\n  Popconfirm,\r\n  Tooltip,\r\n} from \"antd\";\r\nimport {\r\n  UserOutlined,\r\n  ArrowLeftOutlined,\r\n  FilePdfOutlined,\r\n  CheckCircleOutlined,\r\n  ClockCircleOutlined,\r\n  CloseCircleOutlined,\r\n  DownloadOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst { Title } = Typography;\r\n\r\n// Function to fetch application data by ID\r\nconst fetchApplicationById = async (id, token) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `https://api-pil.site/api/admin/admissionApplication/${id}`,\r\n      { headers: { Authorization: `Bearer ${token}` } }\r\n    );\r\n    const { password, _id, __v, ...filteredData } = response.data?.data;\r\n    return filteredData;\r\n  } catch (error) {\r\n    console.error(\"Error fetching application data:\", error);\r\n    return null;\r\n  }\r\n};\r\n\r\n// Function to update application status\r\nconst updateApplicationStatus = async (id, status, token) => {\r\n  try {\r\n    const response = await axios.put(\r\n      `https://api-pil.site/api/admin/admissionApplication/${id}/status`,\r\n      { applicationStatus: status },\r\n      { headers: { Authorization: `Bearer ${token}` } }\r\n    );\r\n    return response.data?.data;\r\n  } catch (error) {\r\n    console.error(\"Error updating application status:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nfunction AdmissionDetails() {\r\n  const { id } = useParams(); // Ensure that the route includes the `id` parameter\r\n  const history = useHistory();\r\n  const [application, setApplication] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [imagePreview, setImagePreview] = useState(null);\r\n  const token = localStorage.getItem(\"x-auth-token\")?.replace(/^\"|\"$/g, \"\");\r\n  const [updatingStatus, setUpdatingStatus] = useState(false);\r\n  const [downloading, setDownloading] = useState(false); // State for download\r\n  const [downloadError, setDownloadError] = useState(null); // State for download error\r\n  const [idError, setIdError] = useState(null); // State for missing ID error\r\n\r\n  useEffect(() => {\r\n    async function loadData() {\r\n      if (!id) {\r\n        setIdError(\"Missing application ID. Unable to fetch application details.\");\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      setLoading(true);\r\n      const data = await fetchApplicationById(id, token);\r\n      if (!data) {\r\n        setIdError(\"Application not found or failed to fetch application details.\");\r\n      } else {\r\n        setApplication(data);\r\n      }\r\n      setLoading(false);\r\n    }\r\n    loadData();\r\n  }, [id, token]);\r\n\r\n  const handleBack = () => history.goBack();\r\n\r\n  const renderFilePreview = (label, filePath) => {\r\n    if (!filePath) return null;\r\n\r\n    const fullPath = `https://api-pil.site/${filePath.replace(/\\\\/g, \"/\")}`;\r\n    return (\r\n      <Col xs={24} sm={12} lg={8} style={{ marginBottom: \"20px\" }} key={label}>\r\n        <Card\r\n          hoverable\r\n          style={{\r\n            textAlign: \"center\",\r\n            borderRadius: \"8px\",\r\n            transition: \"all 0.3s ease-in-out\",\r\n            boxShadow: \"0 2px 8px rgba(0,0,0,0.2)\",\r\n            backgroundColor: \"#f9f9f9\",\r\n            cursor: \"pointer\",\r\n          }}\r\n          onMouseEnter={(e) => {\r\n            e.currentTarget.style.backgroundColor = \"#e6f7ff\";\r\n            e.currentTarget.style.transform = \"scale(1.05)\";\r\n          }}\r\n          onMouseLeave={(e) => {\r\n            e.currentTarget.style.backgroundColor = \"#f9f9f9\";\r\n            e.currentTarget.style.transform = \"scale(1)\";\r\n          }}\r\n          onClick={() => setImagePreview(fullPath)}\r\n        >\r\n          {filePath.toLowerCase().endsWith(\".pdf\") ? (\r\n            <FilePdfOutlined style={{ fontSize: \"64px\", color: \"#ff4d4f\" }} />\r\n          ) : (\r\n            <Image\r\n              src={fullPath}\r\n              alt={label}\r\n              style={{ maxHeight: \"150px\", objectFit: \"contain\", borderRadius: \"8px\" }}\r\n              preview={false}\r\n            />\r\n          )}\r\n          <div style={{ marginTop: \"10px\", fontWeight: \"bold\", color: \"#1890ff\" }}>\r\n            {label}\r\n          </div>\r\n        </Card>\r\n      </Col>\r\n    );\r\n  };\r\n\r\n  // Function to get status badge\r\n  const getStatusBadge = (status) => {\r\n    switch (status) {\r\n      case \"approved\":\r\n        return <Tag icon={<CheckCircleOutlined />} color=\"success\">Approved</Tag>;\r\n      case \"pending\":\r\n        return <Tag icon={<ClockCircleOutlined />} color=\"warning\">Pending</Tag>;\r\n      case \"rejected\":\r\n        return <Tag icon={<CloseCircleOutlined />} color=\"error\">Rejected</Tag>;\r\n      default:\r\n        return <Tag>Unknown</Tag>;\r\n    }\r\n  };\r\n\r\n  // Function to render status alert\r\n  const renderStatusAlert = (status) => {\r\n    switch (status) {\r\n      case \"approved\":\r\n        return (\r\n          <Alert\r\n            message=\"Application Approved\"\r\n            description=\"This application has been approved.\"\r\n            type=\"success\"\r\n            showIcon\r\n            style={{ marginBottom: \"20px\" }}\r\n          />\r\n        );\r\n      case \"pending\":\r\n        return (\r\n          <Alert\r\n            message=\"Application Pending\"\r\n            description=\"This application is currently pending.\"\r\n            type=\"warning\"\r\n            showIcon\r\n            style={{ marginBottom: \"20px\" }}\r\n          />\r\n        );\r\n      case \"rejected\":\r\n        return (\r\n          <Alert\r\n            message=\"Application Rejected\"\r\n            description=\"This application has been rejected.\"\r\n            type=\"error\"\r\n            showIcon\r\n            style={{ marginBottom: \"20px\" }}\r\n          />\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  // Handlers for approving and rejecting the application\r\n  const handleApprove = async () => {\r\n    if (!id) {\r\n      setDownloadError(\"Application ID is missing. Cannot approve the application.\");\r\n      return;\r\n    }\r\n\r\n    setUpdatingStatus(true);\r\n    try {\r\n      const updatedApplication = await updateApplicationStatus(id, \"approved\", token);\r\n      setApplication(updatedApplication);\r\n      notification.success({\r\n        message: \"Success\",\r\n        description: \"Application has been approved.\",\r\n        placement: \"topRight\",\r\n      });\r\n    } catch (error) {\r\n      notification.error({\r\n        message: \"Error\",\r\n        description: \"Failed to approve the application. Please try again.\",\r\n        placement: \"topRight\",\r\n      });\r\n    } finally {\r\n      setUpdatingStatus(false);\r\n    }\r\n  };\r\n\r\n  const handleReject = async () => {\r\n    if (!id) {\r\n      setDownloadError(\"Application ID is missing. Cannot reject the application.\");\r\n      return;\r\n    }\r\n\r\n    setUpdatingStatus(true);\r\n    try {\r\n      const updatedApplication = await updateApplicationStatus(id, \"rejected\", token);\r\n      setApplication(updatedApplication);\r\n      notification.success({\r\n        message: \"Success\",\r\n        description: \"Application has been rejected.\",\r\n        placement: \"topRight\",\r\n      });\r\n    } catch (error) {\r\n      notification.error({\r\n        message: \"Error\",\r\n        description: \"Failed to reject the application. Please try again.\",\r\n        placement: \"topRight\",\r\n      });\r\n    } finally {\r\n      setUpdatingStatus(false);\r\n    }\r\n  };\r\n\r\n  // Handlers for downloading admit card\r\n  const handleDownloadAdmitCard = async () => {\r\n    if (!id) {\r\n      setDownloadError(\"Application ID is missing. Cannot download the admit card.\");\r\n      notification.error({\r\n        message: \"Download Failed\",\r\n        description: \"Application ID is missing. Please contact support.\",\r\n        placement: \"topRight\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    setDownloading(true);\r\n    setDownloadError(null);\r\n    const downloadUrl = `https://api-pil.site/api/admin/admitCard?id=${id}`;\r\n\r\n    try {\r\n      const response = await axios.get(downloadUrl, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        responseType: \"blob\", // Important for handling binary data\r\n      });\r\n\r\n      // Check if response is a PDF\r\n      if (response.headers['content-type'] !== 'application/pdf') {\r\n        throw new Error(\"Received file is not a PDF\");\r\n      }\r\n\r\n      // Create a blob from the response\r\n      const blob = new Blob([response.data], { type: \"application/pdf\" });\r\n      const url = window.URL.createObjectURL(blob);\r\n\r\n      // Create a link element and trigger download\r\n      const link = document.createElement(\"a\");\r\n      link.href = url;\r\n      link.setAttribute(\"download\", `Admit_Card_${application.student_name}.pdf`);\r\n      document.body.appendChild(link);\r\n      link.click();\r\n\r\n      // Clean up\r\n      link.parentNode.removeChild(link);\r\n      window.URL.revokeObjectURL(url);\r\n\r\n      notification.success({\r\n        message: \"Download Successful\",\r\n        description: \"Admit card has been downloaded successfully.\",\r\n        placement: \"topRight\",\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error downloading admit card:\", error);\r\n      setDownloadError(\"Failed to download the admit card. Please try again.\");\r\n      notification.error({\r\n        message: \"Download Failed\",\r\n        description: \"There was an issue downloading the admit card. Please try again.\",\r\n        placement: \"topRight\",\r\n      });\r\n    } finally {\r\n      setDownloading(false);\r\n    }\r\n  };\r\n\r\n  // Render approval/rejection buttons based on current status\r\n  const renderActionButtons = (status) => {\r\n    if (status === \"pending\") {\r\n      return (\r\n        <Row gutter={[16, 16]} justify=\"center\" style={{ marginTop: \"20px\" }}>\r\n          <Col>\r\n            <Popconfirm\r\n              title=\"Are you sure you want to approve this application?\"\r\n              onConfirm={handleApprove}\r\n              okText=\"Yes\"\r\n              cancelText=\"No\"\r\n            >\r\n              <Button\r\n                type=\"primary\"\r\n                icon={<CheckCircleOutlined />}\r\n                loading={updatingStatus}\r\n                style={{ backgroundColor: \"#52c41a\", borderColor: \"#52c41a\" }}\r\n                aria-label=\"Approve application\"\r\n              >\r\n                Approve\r\n              </Button>\r\n            </Popconfirm>\r\n          </Col>\r\n          <Col>\r\n            <Popconfirm\r\n              title=\"Are you sure you want to reject this application?\"\r\n              onConfirm={handleReject}\r\n              okText=\"Yes\"\r\n              cancelText=\"No\"\r\n            >\r\n              <Button\r\n                type=\"primary\"\r\n                icon={<CloseCircleOutlined />}\r\n                loading={updatingStatus}\r\n                danger\r\n                aria-label=\"Reject application\"\r\n              >\r\n                Reject\r\n              </Button>\r\n            </Popconfirm>\r\n          </Col>\r\n        </Row>\r\n      );\r\n    } else if (status === \"approved\") {\r\n      return (\r\n        <Row gutter={[16, 16]} justify=\"center\" style={{ marginTop: \"20px\" }}>\r\n          <Col>\r\n            <Tooltip title=\"Download Admit Card\">\r\n              <Button\r\n                type=\"primary\"\r\n                icon={<DownloadOutlined />}\r\n                loading={downloading}\r\n                onClick={handleDownloadAdmitCard}\r\n                className=\"download-button\"\r\n                style={{\r\n                  backgroundColor: \"#1890ff\",\r\n                  borderColor: \"#1890ff\",\r\n                }}\r\n                aria-label=\"Download admit card\"\r\n              >\r\n                {downloading ? \"Downloading...\" : \"Download Admit Card\"}\r\n              </Button>\r\n            </Tooltip>\r\n          </Col>\r\n        </Row>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  // Function to render status-specific actions\r\n  // Currently, 'pending' can be approved/rejected, 'approved' can download admit card\r\n  const renderStatusActions = () => {\r\n    if (!application) return null;\r\n\r\n    return renderActionButtons(application.applicationStatus);\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div style={{ textAlign: \"center\", marginTop: \"50px\" }}>\r\n        <Spin size=\"large\" />\r\n        <p>Loading Application Details...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (idError) {\r\n    return (\r\n      <div style={{ padding: \"40px\", backgroundColor: \"#f0f2f5\", minHeight: \"100vh\" }}>\r\n        {/* Back Button */}\r\n        <Button\r\n          type=\"default\"\r\n          icon={<ArrowLeftOutlined />}\r\n          size=\"large\"\r\n          style={{ marginBottom: \"20px\" }}\r\n          onClick={handleBack}\r\n          aria-label=\"Go back to previous page\"\r\n        >\r\n          Back\r\n        </Button>\r\n\r\n        {/* Error Alert */}\r\n        <Alert\r\n          message=\"Error\"\r\n          description={idError}\r\n          type=\"error\"\r\n          showIcon\r\n          style={{ marginBottom: \"20px\", maxWidth: \"600px\", margin: \"0 auto\" }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={{ padding: \"40px\", backgroundColor: \"#f0f2f5\", minHeight: \"100vh\" }}>\r\n      {/* Back Button */}\r\n      <Button\r\n        type=\"default\"\r\n        icon={<ArrowLeftOutlined />}\r\n        size=\"large\"\r\n        style={{ marginBottom: \"20px\" }}\r\n        onClick={handleBack}\r\n        aria-label=\"Go back to previous page\"\r\n      >\r\n        Back\r\n      </Button>\r\n\r\n      {/* Status Alert */}\r\n      {renderStatusAlert(application.applicationStatus)}\r\n\r\n      {/* Action Buttons */}\r\n      {renderStatusActions()}\r\n\r\n      {/* Download Error Alert */}\r\n      {downloadError && (\r\n        <Alert\r\n          message=\"Download Error\"\r\n          description={downloadError}\r\n          type=\"error\"\r\n          showIcon\r\n          style={{ marginBottom: \"20px\" }}\r\n        />\r\n      )}\r\n\r\n      {/* Main Card */}\r\n      <Card\r\n        style={{\r\n          borderRadius: \"12px\",\r\n          padding: \"20px\",\r\n          backgroundColor: \"#ffffff\",\r\n          boxShadow: \"0 4px 12px rgba(0, 0, 0, 0.15)\",\r\n        }}\r\n        bordered={false}\r\n      >\r\n        {/* Header */}\r\n        <Row justify=\"center\" align=\"middle\" style={{ marginBottom: \"20px\" }}>\r\n          <Col style={{ textAlign: \"center\" }}>\r\n            {/* Avatar */}\r\n            <Avatar\r\n              size={120}\r\n              src={\r\n                application.student_photo_path\r\n                  ? `https://api-pil.site/${application.student_photo_path?.replace(/\\\\/g, \"/\")}`\r\n                  : undefined\r\n              }\r\n              icon={<UserOutlined />}\r\n              style={{\r\n                marginBottom: \"15px\", // Space below the image\r\n                boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\", // Subtle shadow for emphasis\r\n              }}\r\n            />\r\n            {/* Name */}\r\n            <div\r\n              style={{\r\n                fontWeight: \"bold\",\r\n                fontSize: \"18px\",\r\n                color: \"#333\",\r\n                marginBottom: \"5px\", // Space between name and email\r\n              }}\r\n            >\r\n              {application.student_name || \"N/A\"} {/* Fallback to \"N/A\" if name is missing */}\r\n            </div>\r\n            {/* Email */}\r\n            <div\r\n              style={{\r\n                fontSize: \"14px\",\r\n                color: \"#555\",\r\n              }}\r\n            >\r\n              {application.email || \"N/A\"} {/* Fallback to \"N/A\" if email is missing */}\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n\r\n        {/* Application Status */}\r\n        <Row justify=\"center\" style={{ marginBottom: \"20px\" }}>\r\n          <Col>\r\n            <Title level={4}>Application Status: {getStatusBadge(application.applicationStatus)}</Title>\r\n          </Col>\r\n        </Row>\r\n\r\n        {/* Personal Information */}\r\n        <Divider style={{ borderColor: \"#1890ff\" }}>Personal Information</Divider>\r\n        <Descriptions bordered column={2} size=\"middle\">\r\n          <Descriptions.Item label=\"Class\">{application.class || \"N/A\"}</Descriptions.Item>\r\n          <Descriptions.Item label=\"Date of Birth\">\r\n            {application.dob\r\n              ? `${application.dob.day}-${application.dob.month}-${application.dob.year}`\r\n              : \"N/A\"}\r\n          </Descriptions.Item>\r\n          <Descriptions.Item label=\"Blood Group\">\r\n            <Tag color=\"blue\">{application.blood_group || \"N/A\"}</Tag>\r\n          </Descriptions.Item>\r\n          <Descriptions.Item label=\"PEN No\">{application.pen_no || \"N/A\"}</Descriptions.Item>\r\n          <Descriptions.Item label=\"Residence\">{application.residence || \"N/A\"}</Descriptions.Item>\r\n          <Descriptions.Item label=\"Village\">{application.village || \"N/A\"}</Descriptions.Item>\r\n          <Descriptions.Item label=\"Tehsil\">{application.tehsil || \"N/A\"}</Descriptions.Item>\r\n          <Descriptions.Item label=\"District\">{application.district || \"N/A\"}</Descriptions.Item>\r\n        </Descriptions>\r\n\r\n        {/* Guardian Details */}\r\n        <Divider style={{ borderColor: \"#1890ff\" }}>Parent/Guardian Details</Divider>\r\n        <Descriptions bordered column={2} size=\"middle\">\r\n          <Descriptions.Item label=\"Father's Name\">{application.father_name || \"N/A\"}</Descriptions.Item>\r\n          <Descriptions.Item label=\"Father's Profession\">\r\n            {application.father_profession || \"N/A\"}\r\n          </Descriptions.Item>\r\n          <Descriptions.Item label=\"Father's Contact\">\r\n            {application.father_contact || \"N/A\"}\r\n          </Descriptions.Item>\r\n          <Descriptions.Item label=\"Mother's Name\">{application.mother_name || \"N/A\"}</Descriptions.Item>\r\n          <Descriptions.Item label=\"Mother's Profession\">\r\n            {application.mother_profession || \"N/A\"}\r\n          </Descriptions.Item>\r\n          <Descriptions.Item label=\"Mother's Contact\">\r\n            {application.mother_contact || \"N/A\"}\r\n          </Descriptions.Item>\r\n          <Descriptions.Item label=\"Guardian's Name\">{application.guardian_name || \"N/A\"}</Descriptions.Item>\r\n          <Descriptions.Item label=\"Guardian's Profession\">\r\n            {application.guardian_profession || \"N/A\"}\r\n          </Descriptions.Item>\r\n        </Descriptions>\r\n\r\n        {/* Documents */}\r\n        <Divider style={{ borderColor: \"#1890ff\" }}>Uploaded Documents</Divider>\r\n        <Row gutter={[16, 16]} justify=\"center\">\r\n          {renderFilePreview(\"DOB Certificate\", application.dob_certificate_path)}\r\n          {renderFilePreview(\"Blood Report\", application.blood_report_path)}\r\n          {renderFilePreview(\"Aadhar Card\", application.aadhar_card_path)}\r\n          {renderFilePreview(\"Passport Photos\", application.passport_photos_path)}\r\n          {renderFilePreview(\"Marks Certificate\", application.marks_certificate_path)}\r\n          {renderFilePreview(\"School Leaving Certificate\", application.school_leaving_cert_path)}\r\n        </Row>\r\n      </Card>\r\n\r\n      {/* Full Image Preview */}\r\n      <Modal\r\n        visible={!!imagePreview}\r\n        footer={null}\r\n        onCancel={() => setImagePreview(null)}\r\n        centered\r\n        aria-label=\"Image preview modal\"\r\n      >\r\n        <Image src={imagePreview} alt=\"Document Preview\" style={{ width: \"100%\" }} />\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdmissionDetails;\r\n","// src/axiosInstance.js\r\n\r\nimport axios from 'axios';\r\nimport { API_BASE_URL, ACCESS_TOKEN_NAME } from './config/serverApiConfig';\r\nimport { message as AntMessage } from 'antd';\r\n\r\n// Create an Axios instance with the base URL\r\nconst axiosInstance = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  // No need to set 'Content-Type' here; it will be set dynamically\r\n});\r\n\r\n// Add a request interceptor to include the token in headers\r\naxiosInstance.interceptors.request.use(\r\n  (config) => {\r\n    let token = localStorage.getItem(ACCESS_TOKEN_NAME);\r\n    if (token) {\r\n      // Remove any surrounding quotes (if stored incorrectly)\r\n      token = token.replace(/^\"|\"$/g, '');\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    // Do something with request error\r\n    AntMessage.error('Failed to send request.');\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Add a response interceptor to handle responses globally\r\naxiosInstance.interceptors.response.use(\r\n  (response) => response, // If the response is successful, simply return it\r\n  (error) => {\r\n    // Handle specific status codes\r\n    if (error.response) {\r\n      const { status, data } = error.response;\r\n\r\n      switch (status) {\r\n        case 400:\r\n          AntMessage.error(data.message || 'Bad Request.');\r\n          break;\r\n        case 401:\r\n          AntMessage.error('Unauthorized. Please log in again.');\r\n          // Optionally, redirect to login page\r\n          // window.location.href = '/login';\r\n          break;\r\n        case 403:\r\n          AntMessage.error('Forbidden. You do not have permission to perform this action.');\r\n          break;\r\n        case 404:\r\n          AntMessage.error('Resource not found.');\r\n          break;\r\n        case 500:\r\n          AntMessage.error('Internal Server Error. Please try again later.');\r\n          break;\r\n        default:\r\n          AntMessage.error(data.message || 'An unexpected error occurred.');\r\n      }\r\n    } else if (error.request) {\r\n      // The request was made but no response was received\r\n      AntMessage.error('No response from server. Please check your network.');\r\n    } else {\r\n      // Something happened in setting up the request that triggered an Error\r\n      AntMessage.error(`Error: ${error.message}`);\r\n    }\r\n\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axiosInstance;\r\n","// src/pages/Message.jsx\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport {\r\n  Layout,\r\n  Typography,\r\n  Form,\r\n  Input,\r\n  Select,\r\n  Button,\r\n  Table,\r\n  Space,\r\n  Modal,\r\n  Tag,\r\n  message as AntMessage,\r\n  Alert,\r\n} from 'antd';\r\nimport {\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n  PlusOutlined,\r\n  MailOutlined,\r\n} from '@ant-design/icons';\r\nimport axiosInstance from '../axiosInstance'; // Ensure axiosInstance is correctly configured\r\n\r\nconst { Content } = Layout;\r\nconst { Title } = Typography;\r\nconst { Option } = Select;\r\nconst { confirm } = Modal;\r\n\r\n/**\r\n * Helper function to truncate text to a specified number of words.\r\n * @param {string} text - The text to truncate.\r\n * @param {number} wordLimit - Maximum number of words.\r\n * @returns {string} - Truncated text.\r\n */\r\nconst truncateText = (text, wordLimit) => {\r\n  if (!text) return '';\r\n  const words = text.split(' ');\r\n  if (words.length <= wordLimit) return text;\r\n  return `${words.slice(0, wordLimit).join(' ')}...`;\r\n};\r\n\r\n/**\r\n * Message Management Component\r\n */\r\nconst MessageManagement = () => {\r\n  // State variables\r\n  const [messageList, setMessageList] = useState([]);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [editingMessage, setEditingMessage] = useState(null);\r\n  const [form] = Form.useForm();\r\n  const [loading, setLoading] = useState(true);\r\n  const [submitLoading, setSubmitLoading] = useState(false);\r\n\r\n  // States for viewing full message\r\n  const [viewModalVisible, setViewModalVisible] = useState(false);\r\n  const [selectedMessage, setSelectedMessage] = useState(null);\r\n  const [error, setError] = useState(null); // State for error handling\r\n\r\n  // List of classes from Nursery to 10th\r\n  const classOptions = [\r\n    'Nursery',\r\n    'LKG',\r\n    'UKG',\r\n    '1st',\r\n    '2nd',\r\n    '3rd',\r\n    '4th',\r\n    '5th',\r\n    '6th',\r\n    '7th',\r\n    '8th',\r\n    '9th',\r\n    '10th',\r\n  ];\r\n\r\n  useEffect(() => {\r\n    fetchMessages();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  /**\r\n   * Fetch all messages from the backend.\r\n   */\r\n  const fetchMessages = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await axiosInstance.get('/messages');\r\n      if (response.data.success) {\r\n        const sortedData = response.data.data.sort(\r\n          (a, b) => new Date(b.sentAt) - new Date(a.sentAt)\r\n        );\r\n        const dataWithSerial = sortedData.map((item, index) => ({\r\n          ...item,\r\n          key: item._id,\r\n          serialNo: index + 1,\r\n        }));\r\n        setMessageList(dataWithSerial);\r\n      } else {\r\n        throw new Error('Failed to fetch messages.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching messages:', error);\r\n      setError('Failed to load messages.');\r\n      AntMessage.error('Failed to load messages.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handle form submission for creating or updating a message.\r\n   * @param {Object} values - Form values.\r\n   */\r\n  const onFinish = async (values) => {\r\n    try {\r\n      setSubmitLoading(true); // Start loading\r\n\r\n      if (editingMessage) {\r\n        await axiosInstance.put(`/messages/${editingMessage._id}`, values);\r\n        AntMessage.success('Message updated successfully!');\r\n      } else {\r\n        await axiosInstance.post('/messages', values);\r\n        AntMessage.success('Message created successfully!');\r\n      }\r\n      form.resetFields();\r\n      setIsModalVisible(false);\r\n      setEditingMessage(null);\r\n      fetchMessages();\r\n    } catch (error) {\r\n      console.error('Error saving message:', error);\r\n      AntMessage.error('Failed to save message.');\r\n    } finally {\r\n      setSubmitLoading(false); // Stop loading\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handle deletion of a message with confirmation.\r\n   * @param {string} id - Message ID.\r\n   */\r\n  const handleDelete = (id) => {\r\n    confirm({\r\n      title: 'Are you sure you want to delete this message?',\r\n      icon: <MailOutlined />,\r\n      content: 'This action cannot be undone.',\r\n      okText: 'Yes',\r\n      okType: 'danger',\r\n      cancelText: 'No',\r\n      onOk: async () => {\r\n        try {\r\n          await axiosInstance.delete(`/messages/${id}`);\r\n          AntMessage.success('Message deleted successfully!');\r\n          fetchMessages();\r\n        } catch (error) {\r\n          console.error('Error deleting message:', error);\r\n          AntMessage.error('Failed to delete message.');\r\n        }\r\n      },\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Handle opening the edit modal with pre-filled data.\r\n   * @param {Object} record - Message record.\r\n   */\r\n  const handleEdit = (record) => {\r\n    setEditingMessage(record);\r\n    setIsModalVisible(true);\r\n    form.setFieldsValue({\r\n      title: record.title,\r\n      content: record.content,\r\n      sentBy: record.sentBy,\r\n      targetAudience: record.targetAudience,\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Open the view modal with the selected message.\r\n   * @param {Object} message - The selected message object.\r\n   */\r\n  const handleViewMessage = (message) => {\r\n    setSelectedMessage(message);\r\n    setViewModalVisible(true);\r\n  };\r\n\r\n  /**\r\n   * Close the view modal.\r\n   */\r\n  const handleCloseViewModal = () => {\r\n    setViewModalVisible(false);\r\n    setSelectedMessage(null);\r\n  };\r\n\r\n  // Table columns configuration\r\n  const columns = [\r\n    {\r\n      title: 'Serial No',\r\n      dataIndex: 'serialNo',\r\n      key: 'serialNo',\r\n      sorter: (a, b) => a.serialNo - b.serialNo,\r\n      width: 80,\r\n      align: 'center',\r\n      responsive: ['lg'],\r\n    },\r\n    {\r\n      title: 'Title',\r\n      dataIndex: 'title',\r\n      key: 'title',\r\n      sorter: (a, b) => a.title.localeCompare(b.title),\r\n      width: 200,\r\n      render: (text) => <Tag color=\"purple\">{text}</Tag>,\r\n      responsive: ['sm'],\r\n    },\r\n    {\r\n      title: 'Content',\r\n      dataIndex: 'content',\r\n      key: 'content',\r\n      width: 300,\r\n      render: (text, record) => (\r\n        <span>\r\n          {truncateText(text, 20)}\r\n          {' '}\r\n          <Button\r\n            type=\"link\"\r\n            onClick={() => handleViewMessage(record)}\r\n            style={{ padding: 0 }}\r\n            aria-label={`Read more about message titled ${record.title}`}\r\n          >\r\n            Read More\r\n          </Button>\r\n        </span>\r\n      ),\r\n      responsive: ['md'],\r\n    },\r\n    {\r\n      title: 'Sent By',\r\n      dataIndex: 'sentBy',\r\n      key: 'sentBy',\r\n      sorter: (a, b) => a.sentBy.localeCompare(b.sentBy),\r\n      width: 150,\r\n      render: (text) => <Tag color=\"geekblue\">{text}</Tag>,\r\n      responsive: ['sm'],\r\n    },\r\n    {\r\n      title: 'Target Audience',\r\n      dataIndex: 'targetAudience',\r\n      key: 'targetAudience',\r\n      filters: [\r\n        { text: 'All', value: 'All' },\r\n        { text: 'Parents', value: 'Parents' },\r\n        { text: 'Boys', value: 'Boys' },\r\n        { text: 'Girls', value: 'Girls' },\r\n        ...classOptions.map((cls) => ({\r\n          text: cls,\r\n          value: cls,\r\n        })),\r\n      ],\r\n      onFilter: (value, record) => record.targetAudience === value,\r\n      width: 180,\r\n      render: (text) => <Tag color=\"orange\">{text}</Tag>,\r\n      responsive: ['sm'],\r\n    },\r\n    {\r\n      title: 'Sent At',\r\n      dataIndex: 'sentAt',\r\n      key: 'sentAt',\r\n      sorter: (a, b) => new Date(a.sentAt) - new Date(b.sentAt),\r\n      render: (text) => new Date(text).toLocaleString(),\r\n      width: 180,\r\n      responsive: ['lg'],\r\n    },\r\n    {\r\n      title: 'Actions',\r\n      key: 'actions',\r\n      render: (_, record) => (\r\n        <Space size=\"middle\">\r\n          <Button\r\n            icon={<EditOutlined />}\r\n            type=\"primary\"\r\n            onClick={() => handleEdit(record)}\r\n            aria-label={`Edit message titled ${record.title}`}\r\n          >\r\n            Edit\r\n          </Button>\r\n          <Button\r\n            icon={<DeleteOutlined />}\r\n            type=\"danger\"\r\n            onClick={() => handleDelete(record._id)}\r\n            aria-label={`Delete message titled ${record.title}`}\r\n          >\r\n            Delete\r\n          </Button>\r\n        </Space>\r\n      ),\r\n      width: 150,\r\n      align: 'center',\r\n      responsive: ['sm'],\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Layout\r\n      style={{\r\n        padding: '24px',\r\n        background: '#f0f2f5',\r\n        minHeight: '100vh',\r\n      }}\r\n    >\r\n      <Content>\r\n        <div style={{ textAlign: 'center', marginBottom: '20px' }}>\r\n          <Title level={2} style={{ color: '#1890ff' }}>\r\n            Message Management\r\n          </Title>\r\n        </div>\r\n\r\n        {/* Error Alert */}\r\n        {error && (\r\n          <Alert\r\n            message=\"Error\"\r\n            description={error}\r\n            type=\"error\"\r\n            showIcon\r\n            style={{ marginBottom: '20px' }}\r\n          />\r\n        )}\r\n\r\n        {/* Add Message Button */}\r\n        <div style={{ textAlign: 'right', marginBottom: '20px' }}>\r\n          <Button\r\n            type=\"primary\"\r\n            icon={<PlusOutlined />}\r\n            onClick={() => {\r\n              setIsModalVisible(true);\r\n              setEditingMessage(null);\r\n              form.resetFields();\r\n            }}\r\n          >\r\n            Add Message\r\n          </Button>\r\n        </div>\r\n\r\n        {/* Messages Table */}\r\n        <Table\r\n          columns={columns}\r\n          dataSource={messageList}\r\n          loading={loading}\r\n          pagination={{ pageSize: 10 }}\r\n          bordered\r\n          rowClassName=\"table-row\"\r\n          // Responsive design adjustments\r\n          scroll={{ x: 'max-content' }}\r\n          style={{ background: '#ffffff', borderRadius: '8px' }}\r\n        />\r\n\r\n        {/* Modal for Create/Edit Message */}\r\n        <Modal\r\n          title={editingMessage ? 'Edit Message' : 'Add New Message'}\r\n          visible={isModalVisible}\r\n          onCancel={() => {\r\n            setIsModalVisible(false);\r\n            setEditingMessage(null);\r\n            form.resetFields();\r\n          }}\r\n          footer={null}\r\n          destroyOnClose\r\n          centered\r\n          width={600}\r\n        >\r\n          <Form\r\n            form={form}\r\n            layout=\"vertical\"\r\n            onFinish={onFinish}\r\n            initialValues={{\r\n              targetAudience: 'All',\r\n            }}\r\n          >\r\n            <Form.Item\r\n              label=\"Title\"\r\n              name=\"title\"\r\n              rules={[{ required: true, message: 'Please enter the message title' }]}\r\n            >\r\n              <Input\r\n                placeholder=\"Enter message title\"\r\n                disabled={submitLoading} // Disable input during submission\r\n              />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"Content\"\r\n              name=\"content\"\r\n              rules={[{ required: true, message: 'Please enter the message content' }]}\r\n            >\r\n              <Input.TextArea\r\n                rows={4}\r\n                placeholder=\"Enter message content\"\r\n                disabled={submitLoading} // Disable input during submission\r\n              />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"Sent By\"\r\n              name=\"sentBy\"\r\n              rules={[{ required: true, message: 'Please enter the sender' }]}\r\n            >\r\n              <Input\r\n                placeholder=\"Enter sender's name\"\r\n                disabled={submitLoading} // Disable input during submission\r\n              />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"Target Audience\"\r\n              name=\"targetAudience\"\r\n              rules={[{ required: true, message: 'Please select the target audience' }]}\r\n            >\r\n              <Select disabled={submitLoading}> {/* Disable select during submission */}\r\n                <Option value=\"All\">All</Option>\r\n                <Option value=\"Parents\">Parents</Option>\r\n                <Option value=\"Boys\">Boys</Option>\r\n                <Option value=\"Girls\">Girls</Option>\r\n                {/* Add class options from Nursery to 10th */}\r\n                {classOptions.map((cls) => (\r\n                  <Option key={cls} value={cls}>\r\n                    {cls}\r\n                  </Option>\r\n                ))}\r\n              </Select>\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Space>\r\n                <Button\r\n                  type=\"primary\"\r\n                  htmlType=\"submit\"\r\n                  loading={submitLoading} // Add loading spinner\r\n                  disabled={submitLoading} // Disable button during submission\r\n                >\r\n                  {editingMessage ? 'Update' : 'Create'}\r\n                </Button>\r\n                <Button\r\n                  onClick={() => {\r\n                    setIsModalVisible(false);\r\n                    setEditingMessage(null);\r\n                    form.resetFields();\r\n                  }}\r\n                  disabled={submitLoading} // Disable cancel button during submission\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </Space>\r\n            </Form.Item>\r\n          </Form>\r\n        </Modal>\r\n\r\n        {/* Modal for Viewing Full Message */}\r\n        <Modal\r\n          title={selectedMessage ? selectedMessage.title : 'Message Details'}\r\n          visible={viewModalVisible}\r\n          onCancel={handleCloseViewModal}\r\n          footer={[\r\n            <Button key=\"close\" onClick={handleCloseViewModal}>\r\n              Close\r\n            </Button>,\r\n          ]}\r\n          centered\r\n          width={600}\r\n        >\r\n          {selectedMessage && (\r\n            <>\r\n              <p>{selectedMessage.content}</p>\r\n              <div style={{ marginTop: '15px' }}>\r\n                <Tag color=\"#10b477\">Audience: {selectedMessage.targetAudience}</Tag>\r\n                <Tag color=\"#087f5b\">Sent By: {selectedMessage.sentBy}</Tag>\r\n              </div>\r\n              <p style={{ textAlign: 'right', marginTop: '10px', color: '#6c757d' }}>\r\n                Sent At: {new Date(selectedMessage.sentAt).toLocaleString()}\r\n              </p>\r\n            </>\r\n          )}\r\n        </Modal>\r\n      </Content>\r\n\r\n      {/* Inline Styles for Hover Effect */}\r\n      <style jsx=\"true\">{`\r\n        .table-row:hover {\r\n          background-color: #e6f7ff !important;\r\n        }\r\n\r\n        /* Responsive adjustments */\r\n        @media (max-width: 768px) {\r\n          .ant-table-thead > tr > th {\r\n            font-size: 12px;\r\n          }\r\n\r\n          .ant-table-tbody > tr > td {\r\n            font-size: 12px;\r\n          }\r\n\r\n          .ant-input,\r\n          .ant-btn,\r\n          .ant-select {\r\n            width: 100% !important;\r\n          }\r\n\r\n          /* Adjust modal width on smaller screens */\r\n          .ant-modal {\r\n            width: 90% !important;\r\n          }\r\n        }\r\n\r\n        @media (max-width: 576px) {\r\n          .ant-modal-title {\r\n            font-size: 1.3rem;\r\n          }\r\n\r\n          .ant-modal-body {\r\n            font-size: 0.9rem;\r\n          }\r\n        }\r\n      `}</style>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default MessageManagement;\r\n","// src/components/Syllabus.js\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Layout,\r\n  Typography,\r\n  Form,\r\n  Input,\r\n  Upload,\r\n  Button,\r\n  Table,\r\n  Space,\r\n  Modal,\r\n  Tag,\r\n  message as AntMessage,\r\n} from \"antd\";\r\nimport {\r\n  UploadOutlined,\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n  PlusOutlined,\r\n  FilePdfOutlined,\r\n} from \"@ant-design/icons\";\r\nimport axiosInstance from \"../axiosInstance\";\r\n\r\nconst { Content } = Layout;\r\nconst { Title } = Typography;\r\nconst { confirm } = Modal;\r\n\r\nconst Syllabus = () => {\r\n  const [syllabusList, setSyllabusList] = useState([]);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [editingSyllabus, setEditingSyllabus] = useState(null);\r\n  const [form] = Form.useForm();\r\n  const [loading, setLoading] = useState(true);\r\n  const [submitLoading, setSubmitLoading] = useState(false); // New state for form submission loading\r\n\r\n  useEffect(() => {\r\n    fetchSyllabus();\r\n  }, []);\r\n\r\n  const fetchSyllabus = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await axiosInstance.get(\"/syllabus\");\r\n      const sortedData = response.data.data.map((item, index) => ({\r\n        ...item,\r\n        key: item._id,\r\n        serialNo: index + 1,\r\n      }));\r\n      setSyllabusList(sortedData);\r\n    } catch (error) {\r\n      console.error(\"Error fetching syllabi:\", error);\r\n      AntMessage.error(\"Failed to load syllabi.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const onFinish = async (values) => {\r\n    const { className, pdf } = values;\r\n\r\n    if (!className || !pdf?.[0]?.originFileObj) {\r\n      AntMessage.error(\"Please fill out all required fields and upload a valid PDF.\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"class\", className); // Map 'className' to 'class' as expected by the backend\r\n    formData.append(\"pdf\", pdf[0].originFileObj);\r\n\r\n    setSubmitLoading(true); // Start loading\r\n\r\n    try {\r\n      if (editingSyllabus) {\r\n        await axiosInstance.put(`/syllabus/${editingSyllabus._id}`, formData, {\r\n          headers: { \"Content-Type\": \"multipart/form-data\" },\r\n        });\r\n        AntMessage.success(\"Syllabus updated successfully!\");\r\n      } else {\r\n        await axiosInstance.post(\"/syllabus\", formData, {\r\n          headers: { \"Content-Type\": \"multipart/form-data\" },\r\n        });\r\n        AntMessage.success(\"Syllabus created successfully!\");\r\n      }\r\n      form.resetFields();\r\n      setIsModalVisible(false);\r\n      fetchSyllabus();\r\n    } catch (error) {\r\n      console.error(\"Error saving syllabus:\", error);\r\n      AntMessage.error(\"Failed to save syllabus. Please try again.\");\r\n    } finally {\r\n      setSubmitLoading(false); // Stop loading\r\n    }\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    confirm({\r\n      title: \"Are you sure you want to delete this syllabus?\",\r\n      icon: <FilePdfOutlined />,\r\n      content: \"This action cannot be undone.\",\r\n      okText: \"Yes\",\r\n      okType: \"danger\",\r\n      cancelText: \"No\",\r\n      onOk: async () => {\r\n        // Optional: Add loading state for deletion if desired\r\n        try {\r\n          await axiosInstance.delete(`/syllabus/${id}`);\r\n          AntMessage.success(\"Syllabus deleted successfully!\");\r\n          fetchSyllabus();\r\n        } catch (error) {\r\n          console.error(\"Error deleting syllabus:\", error);\r\n          AntMessage.error(\"Failed to delete syllabus.\");\r\n        }\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleEdit = (record) => {\r\n    setEditingSyllabus(record);\r\n    setIsModalVisible(true);\r\n    form.setFieldsValue({\r\n      className: record.class,\r\n      pdf: [\r\n        {\r\n          uid: \"-1\",\r\n          name: \"Existing PDF\",\r\n          status: \"done\",\r\n          url: `https://api-pil.site/${record.pdfUrl.replace(/\\\\/g, \"/\")}`,\r\n        },\r\n      ],\r\n    });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Serial No\",\r\n      dataIndex: \"serialNo\",\r\n      key: \"serialNo\",\r\n      width: \"10%\",\r\n    },\r\n    {\r\n      title: \"Class\",\r\n      dataIndex: \"class\",\r\n      key: \"class\",\r\n      render: (text) => <Tag color=\"blue\">{text}</Tag>,\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"PDF\",\r\n      dataIndex: \"pdfUrl\",\r\n      key: \"pdfUrl\",\r\n      render: (text) =>\r\n        text ? (\r\n          <a\r\n            href={`https://api-pil.site/${text.replace(/\\\\/g, \"/\")}`}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            <Button icon={<FilePdfOutlined />} type=\"link\">\r\n              View PDF\r\n            </Button>\r\n          </a>\r\n        ) : (\r\n          \"No File\"\r\n        ),\r\n      width: \"30%\",\r\n    },\r\n    {\r\n      title: \"Actions\",\r\n      key: \"actions\",\r\n      render: (_, record) => (\r\n        <Space size=\"middle\">\r\n          <Button\r\n            icon={<EditOutlined />}\r\n            onClick={() => handleEdit(record)}\r\n            type=\"primary\"\r\n          >\r\n            Edit\r\n          </Button>\r\n          <Button\r\n            icon={<DeleteOutlined />}\r\n            danger\r\n            onClick={() => handleDelete(record._id)}\r\n          >\r\n            Delete\r\n          </Button>\r\n        </Space>\r\n      ),\r\n      width: \"40%\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Layout style={{ padding: \"24px\", background: \"#f0f2f5\", minHeight: \"100vh\" }}>\r\n      <Content>\r\n        <Title level={2} style={{ textAlign: \"center\" }}>\r\n          Syllabus Management\r\n        </Title>\r\n        <Button\r\n          type=\"primary\"\r\n          icon={<PlusOutlined />}\r\n          onClick={() => {\r\n            setIsModalVisible(true);\r\n            form.resetFields();\r\n            setEditingSyllabus(null);\r\n          }}\r\n          style={{ marginBottom: \"16px\" }}\r\n        >\r\n          Add Syllabus\r\n        </Button>\r\n        <Table\r\n          columns={columns}\r\n          dataSource={syllabusList}\r\n          loading={loading}\r\n          pagination={{ pageSize: 10 }}\r\n        />\r\n        <Modal\r\n          title={editingSyllabus ? \"Edit Syllabus\" : \"Add New Syllabus\"}\r\n          visible={isModalVisible}\r\n          onCancel={() => setIsModalVisible(false)}\r\n          footer={null}\r\n          destroyOnClose\r\n        >\r\n          <Form form={form} layout=\"vertical\" onFinish={onFinish}>\r\n            <Form.Item\r\n              label=\"Class\"\r\n              name=\"className\"\r\n              rules={[{ required: true, message: \"Please enter the class name\" }]}\r\n            >\r\n              <Input placeholder=\"Enter class name\" disabled={submitLoading} />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"PDF Upload\"\r\n              name=\"pdf\"\r\n              valuePropName=\"fileList\"\r\n              getValueFromEvent={(e) => e && e.fileList}\r\n              rules={[\r\n                {\r\n                  required: !editingSyllabus,\r\n                  message: \"Please upload a valid PDF\",\r\n                },\r\n              ]}\r\n            >\r\n              <Upload\r\n                beforeUpload={() => false} // Prevent automatic upload\r\n                accept=\".pdf\"\r\n                listType=\"text\"\r\n                maxCount={1}\r\n                disabled={submitLoading}\r\n              >\r\n                <Button icon={<UploadOutlined />} disabled={submitLoading}>\r\n                  Click to Upload\r\n                </Button>\r\n              </Upload>\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                block\r\n                loading={submitLoading} // Add loading spinner\r\n                disabled={submitLoading} // Disable button during submission\r\n              >\r\n                {editingSyllabus ? \"Update\" : \"Create\"}\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </Modal>\r\n      </Content>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Syllabus;\r\n","// src/components/Datesheet.js\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Layout,\r\n  Typography,\r\n  Form,\r\n  Input,\r\n  Upload,\r\n  Button,\r\n  Table,\r\n  Space,\r\n  Modal,\r\n  Tag,\r\n  message as AntMessage,\r\n} from \"antd\";\r\nimport {\r\n  UploadOutlined,\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n  PlusOutlined,\r\n  FilePdfOutlined,\r\n} from \"@ant-design/icons\";\r\nimport axiosInstance from \"../axiosInstance\"; // Centralized Axios instance\r\n\r\nconst { Content } = Layout;\r\nconst { Title } = Typography;\r\nconst { confirm } = Modal;\r\n\r\nconst Datesheet = () => {\r\n  const [datesheetList, setDatesheetList] = useState([]);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [editingDatesheet, setEditingDatesheet] = useState(null);\r\n  const [form] = Form.useForm();\r\n  const [loading, setLoading] = useState(true);\r\n  const [submitLoading, setSubmitLoading] = useState(false); // New state for form submission loading\r\n\r\n  useEffect(() => {\r\n    fetchDatesheets();\r\n  }, []);\r\n\r\n  const fetchDatesheets = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await axiosInstance.get(\"/datesheet\");\r\n      const sortedData = response.data.data.sort(\r\n        (a, b) => new Date(b.createdAt) - new Date(a.createdAt)\r\n      );\r\n      const dataWithSerial = sortedData.map((item, index) => ({\r\n        ...item,\r\n        key: item._id,\r\n        serialNo: index + 1,\r\n      }));\r\n      setDatesheetList(dataWithSerial);\r\n    } catch (error) {\r\n      console.error(\"Error fetching datesheets:\", error);\r\n      AntMessage.error(\"Failed to load datesheets.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const onFinish = async (values) => {\r\n    const { examName, year, className, pdf } = values;\r\n\r\n    if (!examName || !year || !className || !pdf?.[0]?.originFileObj) {\r\n      AntMessage.error(\r\n        \"Please fill out all required fields and upload a valid PDF.\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"examName\", examName);\r\n    formData.append(\"year\", year);\r\n    formData.append(\"class\", className);\r\n\r\n    if (pdf?.length > 0) {\r\n      formData.append(\"pdf\", pdf[0].originFileObj);\r\n    } else {\r\n      AntMessage.error(\"Please upload a valid PDF file.\");\r\n      return;\r\n    }\r\n\r\n    setSubmitLoading(true); // Start loading\r\n\r\n    try {\r\n      if (editingDatesheet) {\r\n        await axiosInstance.put(\r\n          `/datesheet/${editingDatesheet._id}`,\r\n          formData,\r\n          {\r\n            headers: { \"Content-Type\": \"multipart/form-data\" },\r\n          }\r\n        );\r\n        AntMessage.success(\"Datesheet updated successfully!\");\r\n      } else {\r\n        await axiosInstance.post(\"/datesheet\", formData, {\r\n          headers: { \"Content-Type\": \"multipart/form-data\" },\r\n        });\r\n        AntMessage.success(\"Datesheet created successfully!\");\r\n      }\r\n      form.resetFields();\r\n      setIsModalVisible(false);\r\n      setEditingDatesheet(null);\r\n      fetchDatesheets();\r\n    } catch (error) {\r\n      console.error(\"Error saving datesheet:\", error.response || error.message);\r\n      AntMessage.error(\r\n        error.response?.data?.error ||\r\n          \"Failed to save datesheet. Please try again.\"\r\n      );\r\n    } finally {\r\n      setSubmitLoading(false); // Stop loading\r\n    }\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    confirm({\r\n      title: \"Are you sure you want to delete this datesheet?\",\r\n      icon: <FilePdfOutlined />,\r\n      content: \"This action cannot be undone.\",\r\n      okText: \"Yes\",\r\n      okType: \"danger\",\r\n      cancelText: \"No\",\r\n      onOk: async () => {\r\n        try {\r\n          await axiosInstance.delete(`/datesheet/${id}`);\r\n          AntMessage.success(\"Datesheet deleted successfully!\");\r\n          fetchDatesheets();\r\n        } catch (error) {\r\n          console.error(\"Error deleting datesheet:\", error);\r\n          AntMessage.error(\"Failed to delete datesheet.\");\r\n        }\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleEdit = (record) => {\r\n    setEditingDatesheet(record);\r\n    setIsModalVisible(true);\r\n\r\n    // Pre-fill the form, including the existing PDF\r\n    form.setFieldsValue({\r\n      examName: record.examName,\r\n      year: record.year,\r\n      className: record.class,\r\n      pdf: [\r\n        {\r\n          uid: \"-1\", // Unique identifier for the file\r\n          name: \"Existing PDF\", // Display name of the file\r\n          status: \"done\", // Mark the file as already uploaded\r\n          url: `https://api-pil.site/${record.pdf.replace(/\\\\/g, \"/\")}`, // File URL\r\n        },\r\n      ],\r\n    });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Serial No\",\r\n      dataIndex: \"serialNo\",\r\n      key: \"serialNo\",\r\n      sorter: (a, b) => a.serialNo - b.serialNo,\r\n      width: 80,\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Exam Name\",\r\n      dataIndex: \"examName\",\r\n      key: \"examName\",\r\n    },\r\n    {\r\n      title: \"Year\",\r\n      dataIndex: \"year\",\r\n      key: \"year\",\r\n    },\r\n    {\r\n      title: \"Class\",\r\n      dataIndex: \"class\",\r\n      key: \"class\",\r\n      render: (text) => <Tag color=\"blue\">{text}</Tag>,\r\n    },\r\n    {\r\n      title: \"PDF\",\r\n      dataIndex: \"pdf\",\r\n      key: \"pdf\",\r\n      render: (text) => {\r\n        if (!text) {\r\n          return \"No File\";\r\n        }\r\n        // Construct the full URL\r\n        const fullUrl = `https://api-pil.site/${text.replace(/\\\\/g, \"/\")}`;\r\n\r\n        return (\r\n          <a href={fullUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <Button icon={<FilePdfOutlined />} type=\"link\">\r\n              View PDF\r\n            </Button>\r\n          </a>\r\n        );\r\n      },\r\n      width: 120,\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Uploaded At\",\r\n      dataIndex: \"createdAt\",\r\n      key: \"createdAt\",\r\n      render: (text) => new Date(text).toLocaleString(),\r\n    },\r\n    {\r\n      title: \"Actions\",\r\n      key: \"actions\",\r\n      render: (_, record) => (\r\n        <Space size=\"middle\">\r\n          <Button\r\n            icon={<EditOutlined />}\r\n            type=\"primary\"\r\n            onClick={() => handleEdit(record)}\r\n          >\r\n            Edit\r\n          </Button>\r\n          <Button\r\n            icon={<DeleteOutlined />}\r\n            type=\"danger\"\r\n            onClick={() => handleDelete(record._id)}\r\n          >\r\n            Delete\r\n          </Button>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Layout\r\n      style={{ padding: \"24px\", background: \"#f0f2f5\", minHeight: \"100vh\" }}\r\n    >\r\n      <Content>\r\n        <Title level={2} style={{ textAlign: \"center\", color: \"#1890ff\" }}>\r\n          Datesheet Management\r\n        </Title>\r\n        <Button\r\n          type=\"primary\"\r\n          icon={<PlusOutlined />}\r\n          style={{ marginBottom: \"20px\" }}\r\n          onClick={() => {\r\n            setIsModalVisible(true);\r\n            setEditingDatesheet(null);\r\n            form.resetFields();\r\n          }}\r\n        >\r\n          Add Datesheet\r\n        </Button>\r\n        <Table\r\n          columns={columns}\r\n          dataSource={datesheetList}\r\n          loading={loading}\r\n          pagination={{ pageSize: 10 }}\r\n        />\r\n        <Modal\r\n          title={editingDatesheet ? \"Edit Datesheet\" : \"Add New Datesheet\"}\r\n          visible={isModalVisible}\r\n          onCancel={() => {\r\n            setIsModalVisible(false);\r\n            setEditingDatesheet(null);\r\n            form.resetFields();\r\n          }}\r\n          footer={null}\r\n          destroyOnClose\r\n        >\r\n          <Form form={form} layout=\"vertical\" onFinish={onFinish}>\r\n            <Form.Item\r\n              label=\"Exam Name\"\r\n              name=\"examName\"\r\n              rules={[\r\n                { required: true, message: \"Please enter the exam name\" },\r\n              ]}\r\n            >\r\n              <Input\r\n                placeholder=\"Enter exam name (e.g., Mid-term, Final Exam)\"\r\n                disabled={submitLoading} // Disable input during submission\r\n              />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"Year\"\r\n              name=\"year\"\r\n              rules={[{ required: true, message: \"Please enter the year\" }]}\r\n            >\r\n              <Input\r\n                type=\"number\"\r\n                placeholder=\"Enter year (e.g., 2024)\"\r\n                disabled={submitLoading} // Disable input during submission\r\n              />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"Class\"\r\n              name=\"className\"\r\n              rules={[\r\n                { required: true, message: \"Please enter the class name\" },\r\n              ]}\r\n            >\r\n              <Input\r\n                placeholder=\"Enter class name (e.g., 10, 12)\"\r\n                disabled={submitLoading} // Disable input during submission\r\n              />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"PDF Upload\"\r\n              name=\"pdf\"\r\n              valuePropName=\"fileList\"\r\n              getValueFromEvent={(e) => {\r\n                if (Array.isArray(e)) {\r\n                  return e;\r\n                }\r\n                return e && e.fileList;\r\n              }}\r\n              rules={[\r\n                { required: true, message: \"Please upload the datesheet PDF\" },\r\n              ]}\r\n            >\r\n              <Upload\r\n                beforeUpload={() => false}\r\n                accept=\".pdf\"\r\n                maxCount={1}\r\n                disabled={submitLoading} // Disable upload during submission\r\n              >\r\n                <Button\r\n                  icon={<UploadOutlined />}\r\n                  disabled={submitLoading} // Disable button during submission\r\n                >\r\n                  Click to Upload PDF\r\n                </Button>\r\n              </Upload>\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n              <Space>\r\n                <Button\r\n                  type=\"primary\"\r\n                  htmlType=\"submit\"\r\n                  loading={submitLoading} // Add loading spinner\r\n                  disabled={submitLoading} // Disable button during submission\r\n                >\r\n                  {editingDatesheet ? \"Update\" : \"Create\"}\r\n                </Button>\r\n                <Button\r\n                  onClick={() => {\r\n                    setIsModalVisible(false);\r\n                    setEditingDatesheet(null);\r\n                    form.resetFields();\r\n                  }}\r\n                  disabled={submitLoading} // Disable cancel button during submission\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </Space>\r\n            </Form.Item>\r\n          </Form>\r\n        </Modal>\r\n      </Content>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Datesheet;\r\n","// src/pages/Contacts.jsx\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport {\r\n  Layout,\r\n  Typography,\r\n  Table,\r\n  Button,\r\n  Space,\r\n  Modal,\r\n  Tag,\r\n  message as AntMessage,\r\n  Alert,\r\n} from 'antd';\r\nimport {\r\n  DeleteOutlined,\r\n  ExclamationCircleOutlined,\r\n  EyeOutlined,\r\n} from '@ant-design/icons';\r\nimport axiosInstance from '../axiosInstance'; // Ensure axiosInstance is correctly configured\r\n\r\nconst { Content } = Layout;\r\nconst { Title } = Typography;\r\nconst { confirm } = Modal;\r\n\r\n/**\r\n * Helper function to truncate text to a specified number of words.\r\n * @param {string} text - The text to truncate.\r\n * @param {number} wordLimit - Maximum number of words.\r\n * @returns {string} - Truncated text.\r\n */\r\nconst truncateText = (text, wordLimit) => {\r\n  if (!text) return '';\r\n  const words = text.split(' ');\r\n  if (words.length <= wordLimit) return text;\r\n  return `${words.slice(0, wordLimit).join(' ')}...`;\r\n};\r\n\r\n/**\r\n * Contacts Management Component\r\n */\r\nconst Contacts = () => {\r\n  // State variables\r\n  const [contacts, setContacts] = useState([]);\r\n  const [loading, setLoading] = useState(true); // For data fetching\r\n  const [error, setError] = useState(null); // For error handling\r\n\r\n  // Modal state\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [selectedContact, setSelectedContact] = useState(null);\r\n\r\n  /**\r\n   * Fetch all contacts from the backend.\r\n   */\r\n  const fetchContacts = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await axiosInstance.get('/contact'); // Adjust the endpoint if necessary\r\n      if (response.data.success) {\r\n        setContacts(response.data.data);\r\n      } else {\r\n        throw new Error('Failed to fetch contacts.');\r\n      }\r\n    } catch (err) {\r\n      console.error('Error fetching contacts:', err);\r\n      setError('Failed to load contacts.');\r\n      AntMessage.error('Failed to load contacts.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Fetch contacts on component mount\r\n  useEffect(() => {\r\n    fetchContacts();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  /**\r\n   * Handle deletion of a contact with confirmation.\r\n   * @param {string} id - Contact ID.\r\n   */\r\n  const handleDelete = (id) => {\r\n    confirm({\r\n      title: 'Are you sure you want to delete this contact?',\r\n      icon: <ExclamationCircleOutlined />,\r\n      content: 'This action cannot be undone.',\r\n      okText: 'Yes',\r\n      okType: 'danger',\r\n      cancelText: 'No',\r\n      onOk: async () => {\r\n        try {\r\n          await axiosInstance.delete(`/contact/${id}`); // Adjust the endpoint if necessary\r\n          AntMessage.success('Contact deleted successfully!');\r\n          fetchContacts(); // Refresh the contacts list\r\n        } catch (err) {\r\n          console.error('Error deleting contact:', err);\r\n          AntMessage.error('Failed to delete contact.');\r\n        }\r\n      },\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Handle viewing the full message in a modal.\r\n   * @param {Object} contact - The contact object.\r\n   */\r\n  const handleView = (contact) => {\r\n    setSelectedContact(contact);\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  /**\r\n   * Close the modal.\r\n   */\r\n  const handleCloseModal = () => {\r\n    setIsModalVisible(false);\r\n    setSelectedContact(null);\r\n  };\r\n\r\n  // Define table columns\r\n  const columns = [\r\n    {\r\n      title: 'Serial No',\r\n      dataIndex: 'serialNo',\r\n      key: 'serialNo',\r\n      render: (text, record, index) => index + 1,\r\n      width: 80,\r\n      align: 'center',\r\n    },\r\n    {\r\n      title: 'Name',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n      sorter: (a, b) => a.name.localeCompare(b.name),\r\n      render: (text) => <Tag color=\"blue\">{text}</Tag>,\r\n      width: 150,\r\n    },\r\n    {\r\n      title: 'Email',\r\n      dataIndex: 'email',\r\n      key: 'email',\r\n      render: (text) => <a href={`mailto:${text}`}>{text}</a>,\r\n      width: 200,\r\n    },\r\n    {\r\n      title: 'Subject',\r\n      dataIndex: 'subject',\r\n      key: 'subject',\r\n      sorter: (a, b) => a.subject.localeCompare(b.subject),\r\n      render: (text) => <Tag color=\"green\">{text}</Tag>,\r\n      width: 200,\r\n    },\r\n    {\r\n      title: 'Message',\r\n      dataIndex: 'message',\r\n      key: 'message',\r\n      render: (text, record) => (\r\n        <span>\r\n          {truncateText(text, 20)}{' '}\r\n          <Button\r\n            type=\"link\"\r\n            icon={<EyeOutlined />}\r\n            onClick={() => handleView(record)}\r\n            aria-label={`View full message from ${record.name}`}\r\n          >\r\n            View\r\n          </Button>\r\n        </span>\r\n      ),\r\n      width: 300,\r\n    },\r\n    {\r\n      title: 'Created At',\r\n      dataIndex: 'createdAt',\r\n      key: 'createdAt',\r\n      sorter: (a, b) => new Date(a.createdAt) - new Date(b.createdAt),\r\n      render: (text) => new Date(text).toLocaleString(),\r\n      width: 200,\r\n    },\r\n    {\r\n      title: 'Actions',\r\n      key: 'actions',\r\n      render: (_, record) => (\r\n        <Space size=\"middle\">\r\n          <Button\r\n            type=\"danger\"\r\n            icon={<DeleteOutlined />}\r\n            onClick={() => handleDelete(record._id)}\r\n            aria-label={`Delete contact from ${record.name}`}\r\n          >\r\n            Delete\r\n          </Button>\r\n        </Space>\r\n      ),\r\n      width: 150,\r\n      align: 'center',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Layout\r\n      style={{\r\n        padding: '24px',\r\n        background: '#f0f2f5',\r\n        minHeight: '100vh',\r\n      }}\r\n    >\r\n      <Content>\r\n        {/* Page Title */}\r\n        <div style={{ textAlign: 'center', marginBottom: '20px' }}>\r\n          <Title level={2} style={{ color: '#1890ff' }}>\r\n            Contacts Management\r\n          </Title>\r\n        </div>\r\n\r\n        {/* Error Alert */}\r\n        {error && (\r\n          <Alert\r\n            message=\"Error\"\r\n            description={error}\r\n            type=\"error\"\r\n            showIcon\r\n            style={{ marginBottom: '20px' }}\r\n            closable\r\n            onClose={() => setError(null)}\r\n          />\r\n        )}\r\n\r\n        {/* Contacts Table */}\r\n        <Table\r\n          columns={columns}\r\n          dataSource={contacts}\r\n          loading={loading}\r\n          pagination={{ pageSize: 10 }}\r\n          bordered\r\n          rowKey=\"_id\" // Ensure each row has a unique key\r\n          style={{ background: '#ffffff', borderRadius: '8px' }}\r\n        />\r\n\r\n        {/* Modal for Viewing Full Contact Message */}\r\n        <Modal\r\n          title={selectedContact ? `Message from ${selectedContact.name}` : 'Contact Details'}\r\n          visible={isModalVisible}\r\n          onCancel={handleCloseModal}\r\n          footer={[\r\n            <Button key=\"close\" onClick={handleCloseModal}>\r\n              Close\r\n            </Button>,\r\n          ]}\r\n          centered\r\n          width={600}\r\n        >\r\n          {selectedContact && (\r\n            <>\r\n              <p><strong>Email:</strong> <a href={`mailto:${selectedContact.email}`}>{selectedContact.email}</a></p>\r\n              <p><strong>Subject:</strong> {selectedContact.subject}</p>\r\n              <p><strong>Message:</strong></p>\r\n              <p>{selectedContact.message}</p>\r\n              <p style={{ textAlign: 'right', color: '#6c757d' }}>\r\n                <em>Sent At: {new Date(selectedContact.createdAt).toLocaleString()}</em>\r\n              </p>\r\n            </>\r\n          )}\r\n        </Modal>\r\n      </Content>\r\n\r\n      {/* Inline Styles for Hover Effects and Responsiveness */}\r\n      <style jsx=\"true\">{`\r\n        .table-row:hover {\r\n          background-color: #e6f7ff !important;\r\n        }\r\n\r\n        /* Responsive adjustments */\r\n        @media (max-width: 768px) {\r\n          .ant-table-thead > tr > th {\r\n            font-size: 12px;\r\n          }\r\n\r\n          .ant-table-tbody > tr > td {\r\n            font-size: 12px;\r\n          }\r\n\r\n          .ant-input,\r\n          .ant-btn,\r\n          .ant-select {\r\n            width: 100% !important;\r\n          }\r\n        }\r\n\r\n        @media (max-width: 576px) {\r\n          .ant-modal-title {\r\n            font-size: 1.3rem;\r\n          }\r\n\r\n          .ant-modal-body {\r\n            font-size: 0.9rem;\r\n          }\r\n        }\r\n      `}</style>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n","// src/router/AppRouter.jsx\r\n\r\nimport React, { lazy, Suspense } from \"react\";\r\nimport { Redirect, Route, Switch, useLocation } from \"react-router-dom\";\r\nimport { AnimatePresence } from \"framer-motion\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport PublicRoute from \"./PublicRoute\";\r\nimport PageLoader from \"@/components/PageLoader\";\r\nimport Admission_appli from \"@/pages/Admission_appli\";\r\nimport AdmissionDetails from \"@/pages/AdmissionDetails\";\r\nimport Message from \"@/pages/Message\";       // Default Import\r\nimport Syllabus from \"@/pages/Syllabus\";     // Default Import\r\nimport Datesheet from \"@/pages/Datesheet\";   // Default Import\r\nimport Contacts from \"@/pages/Contacts\";   // Default Import\r\n\r\nconst Dashboard = lazy(() =>\r\n  import(/*webpackChunkName:'DashboardPage'*/ \"@/pages/Dashboard\")\r\n);\r\nconst Admin = lazy(() =>\r\n  import(/*webpackChunkName:'AdminPage'*/ \"@/pages/Admin\")\r\n);\r\n\r\nconst Logout = lazy(() =>\r\n  import(/*webpackChunkName:'LogoutPage'*/ \"@/pages/Logout\")\r\n);\r\nconst NotFound = lazy(() =>\r\n  import(/*webpackChunkName:'NotFoundPage'*/ \"@/pages/NotFound\")\r\n);\r\n\r\nexport default function AppRouter() {\r\n  const location = useLocation();\r\n  return (\r\n    <Suspense fallback={<PageLoader />}>\r\n      <AnimatePresence exitBeforeEnter initial={false}>\r\n        <Switch location={location} key={location.pathname}>\r\n          <PrivateRoute path=\"/\" component={Dashboard} exact />\r\n          <PrivateRoute component={Admission_appli} path=\"/admissionApplication\" exact />\r\n          <PrivateRoute component={Admin} path=\"/admin\" exact />\r\n          <PrivateRoute component={Logout} path=\"/logout\" exact />\r\n          <PrivateRoute component={AdmissionDetails} path=\"/admission/:id\" exact />\r\n          \r\n          <PrivateRoute component={Message} path=\"/message\" exact />\r\n          <PrivateRoute component={Syllabus} path=\"/syllabus\" exact />\r\n          <PrivateRoute component={Datesheet} path=\"/datesheet\" exact />\r\n          <PrivateRoute component={Contacts} path=\"/contacts\" exact />\r\n          \r\n          <PublicRoute path=\"/login\" render={() => <Redirect to=\"/\" />} />\r\n          <Route\r\n            path=\"*\"\r\n            component={NotFound}\r\n          />\r\n        </Switch>\r\n      </AnimatePresence>\r\n    </Suspense>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Layout, Menu } from \"antd\";\r\nimport {\r\n  SettingOutlined,\r\n  FileSyncOutlined,\r\n  DashboardOutlined,\r\n  UserOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nconst { Sider } = Layout;\r\n\r\nfunction Navigation() {\r\n  const [collapsed, setCollapsed] = useState(false);\r\n\r\n  const onCollapse = () => {\r\n    setCollapsed(!collapsed);\r\n  };\r\n\r\n  return (\r\n    <Sider\r\n      collapsible\r\n      collapsed={collapsed}\r\n      onCollapse={onCollapse}\r\n      style={{\r\n        zIndex: 1000,\r\n      }}\r\n    >\r\n      {/* Logo Section */}\r\n      <div\r\n        className=\"logo\"\r\n        style={{\r\n          height: \"88px\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          marginTop: \"26px\",\r\n          overflow: \"hidden\",\r\n          background:\"transparent\"\r\n        }}\r\n      >\r\n        {/* Add Logo Image */}\r\n        <img\r\n          src=\"https://pioneerinstitute.in/assets/images/wt-logo.png\" // Logo file in the public folder\r\n          alt=\"Logo\"\r\n          style={{\r\n            maxHeight: \"100%\",\r\n            maxWidth: \"100%\",\r\n            objectFit: \"contain\",\r\n            transition: \"all 0.3s ease-in-out\", // Smooth resizing on collapse\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      {/* Sidebar Menu */}\r\n      <Menu theme=\"dark\" defaultSelectedKeys={[\"1\"]} mode=\"inline\">\r\n        <Menu.Item key=\"1\" icon={<DashboardOutlined />}>\r\n          <Link to=\"/\">Home Page</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"2\" icon={<FileSyncOutlined />}>\r\n          <Link to=\"/admissionApplication\">Admission Application</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"3\" icon={<SettingOutlined />}>\r\n          <Link to=\"/syllabus\">Syllabus</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"5\" icon={<UserOutlined />}>\r\n          <Link to=\"/message\">Message</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"6\" icon={<UserOutlined />}>\r\n          <Link to=\"/datesheet\">Datesheet</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"7\" icon={<UserOutlined />}>\r\n          <Link to=\"/contacts\">Contacts</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"8\" icon={<FileSyncOutlined />}>\r\n          <Link to=\"/logout\">Logout</Link>\r\n        </Menu.Item>\r\n      </Menu>\r\n    </Sider>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","// export { default as AuthRouter } from \"./AuthRouter\";\r\n// export { default as AppRouter } from \"./AppRouter\";\r\nimport React, { useEffect } from \"react\";\r\n\r\nimport AuthRouter from \"./AuthRouter\";\r\nimport AppRouter from \"./AppRouter\";\r\n\r\nimport { Layout } from \"antd\";\r\nimport Navigation from \"@/layout/Navigation\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectAuth } from \"@/redux/auth/selectors\";\r\n\r\nexport default function Router() {\r\n  const { isLoggedIn } = useSelector(selectAuth);\r\n\r\n  useEffect(() => {\r\n    console.log(\"isLoggedIn : \", isLoggedIn);\r\n  }, [isLoggedIn]);\r\n\r\n  if (isLoggedIn === false)\r\n    return (\r\n      <Layout style={{ minHeight: \"100vh\" }}>\r\n        <AuthRouter />\r\n      </Layout>\r\n    );\r\n  else\r\n    return (\r\n      <Layout style={{ minHeight: \"100vh\" }}>\r\n        <Navigation />\r\n        <Layout style={{ minHeight: \"100vh\" }}>\r\n          <AppRouter />\r\n        </Layout>\r\n      </Layout>\r\n    );\r\n}\r\n\r\n// export default App;\r\n","import * as actionTypes from \"./types\";\r\n\r\nconst INITIAL_STATE = {\r\n  current: {},\r\n  loading: false,\r\n  isLoggedIn: false,\r\n};\r\n\r\nconst authReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.LOADING_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case actionTypes.FAILED_REQUEST:\r\n      return INITIAL_STATE;\r\n\r\n    case actionTypes.LOGIN_SUCCESS:\r\n      return {\r\n        current: action.payload,\r\n        loading: false,\r\n        isLoggedIn: true,\r\n      };\r\n    case actionTypes.LOGOUT_SUCCESS:\r\n      return INITIAL_STATE;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","export const RESET_STATE = \"CRUD_RESET_STATE\";\r\nexport const CURRENT_ITEM = \"CRUD_CURRENT_ITEM\";\r\n\r\nexport const REQUEST_LOADING = \"CRUD_REQUEST_LOADING\";\r\nexport const REQUEST_SUCCESS = \"CRUD_REQUEST_SUCCESS\";\r\nexport const REQUEST_FAILED = \"CRUD_REQUEST_FAILED\";\r\n\r\nexport const CURRENT_ACTION = \"CRUD_CURRENT_ACTION\";\r\nexport const RESET_ACTION = \"CRUD_RESET_ACTION\";\r\n","import * as actionTypes from \"./types\";\r\n\r\nconst INITIAL_KEY_STATE = {\r\n  result: null,\r\n  current: null,\r\n  isLoading: false,\r\n  isSuccess: false,\r\n};\r\n\r\nconst INITIAL_STATE = {\r\n  current: {\r\n    result: null,\r\n  },\r\n  list: {\r\n    result: {\r\n      items: [],\r\n      pagination: {\r\n        current: 1,\r\n        pageSize: 10,\r\n        total: 1,\r\n      },\r\n    },\r\n    isLoading: false,\r\n    isSuccess: false,\r\n  },\r\n  create: INITIAL_KEY_STATE,\r\n  update: INITIAL_KEY_STATE,\r\n  delete: INITIAL_KEY_STATE,\r\n  read: INITIAL_KEY_STATE,\r\n  search: { ...INITIAL_KEY_STATE, result: [] },\r\n};\r\n\r\nconst crudReducer = (state = INITIAL_STATE, action) => {\r\n  const { payload, keyState } = action;\r\n  switch (action.type) {\r\n    case actionTypes.RESET_STATE:\r\n      return INITIAL_STATE;\r\n    case actionTypes.CURRENT_ITEM:\r\n      return {\r\n        ...state,\r\n        current: {\r\n          result: payload,\r\n        },\r\n      };\r\n    case actionTypes.REQUEST_LOADING:\r\n      return {\r\n        ...state,\r\n        [keyState]: {\r\n          ...state[keyState],\r\n          isLoading: true,\r\n        },\r\n      };\r\n    case actionTypes.REQUEST_FAILED:\r\n      return {\r\n        ...state,\r\n        [keyState]: {\r\n          ...state[keyState],\r\n          isLoading: false,\r\n          isSuccess: false,\r\n        },\r\n      };\r\n    case actionTypes.REQUEST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        [keyState]: {\r\n          ...state[keyState],\r\n          result: payload,\r\n          isLoading: false,\r\n          isSuccess: true,\r\n        },\r\n      };\r\n    case actionTypes.CURRENT_ACTION:\r\n      return {\r\n        ...state,\r\n        [keyState]: {\r\n          ...INITIAL_KEY_STATE,\r\n          current: payload,\r\n        },\r\n      };\r\n    case actionTypes.RESET_ACTION:\r\n      return {\r\n        ...state,\r\n        [keyState]: {\r\n          ...INITIAL_STATE[keyState],\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default crudReducer;\r\n","export const INIT_STATE = \"SEARCH_INIT_STATE\";\r\nexport const RESET_STATE = \"SEARCH_RESET_STATE\";\r\nexport const CURRENT_SELECTED = \"SEARCH_CURRENT_SELECTED\";\r\n\r\nexport const REQUEST_LOADING = \"SEARCH_REQUEST_LOADING\";\r\nexport const REQUEST_SUCCESS = \"SEARCH_REQUEST_SUCCESS\";\r\nexport const REQUEST_FAILED = \"SEARCH_REQUEST_FAILED\";\r\n\r\nexport const RESET_REF = \"SEARCH_RESET_REF\";\r\n","import * as actionTypes from \"./types\";\r\n\r\nconst INITIAL_REF_STATE = {\r\n  result: [],\r\n  selected: null,\r\n  isLoading: false,\r\n  isSuccess: false,\r\n};\r\nconst INITIAL_STATE = {};\r\n\r\nconst searchReducer = (state = INITIAL_STATE, action) => {\r\n  const { payload = null, keyState = null } = action;\r\n  switch (action.type) {\r\n    case actionTypes.INIT_STATE: {\r\n      let newState = {};\r\n      payload.map((refKey) => (newState[refKey] = INITIAL_REF_STATE));\r\n      return newState;\r\n    }\r\n\r\n    case actionTypes.RESET_STATE:\r\n      return INITIAL_STATE;\r\n\r\n    case actionTypes.RESET_REF:\r\n      return {\r\n        ...state,\r\n        [keyState]: INITIAL_REF_STATE,\r\n      };\r\n\r\n    case actionTypes.CURRENT_SELECTED:\r\n      return {\r\n        ...state,\r\n        [keyState]: {\r\n          ...state[keyState],\r\n          selected: payload,\r\n        },\r\n      };\r\n    case actionTypes.REQUEST_LOADING:\r\n      return {\r\n        ...state,\r\n        [keyState]: {\r\n          ...INITIAL_REF_STATE,\r\n          isLoading: true,\r\n        },\r\n      };\r\n    case actionTypes.REQUEST_FAILED:\r\n      return {\r\n        ...state,\r\n        [keyState]: INITIAL_REF_STATE,\r\n      };\r\n    case actionTypes.REQUEST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        [keyState]: {\r\n          ...INITIAL_REF_STATE,\r\n          result: payload,\r\n          isSuccess: true,\r\n        },\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default searchReducer;\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport { reducer as authReducer } from \"./auth\";\r\nimport { reducer as crudReducer } from \"./crud\";\r\nimport { reducer as searchReducer } from \"./search\";\r\n\r\nimport * as actionTypes from \"./auth/types\";\r\n\r\n// Combine all reducers.\r\n\r\nconst appReducer = combineReducers({\r\n  auth: authReducer,\r\n  crud: crudReducer,\r\n  search: searchReducer,\r\n});\r\n\r\nconst rootReducer = (state, action) => {\r\n  if (action.type === actionTypes.LOGOUT_SUCCESS) {\r\n    state = undefined;\r\n  }\r\n  return appReducer(state, action);\r\n};\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { createLogger } from \"redux-logger\";\r\n\r\nimport rootReducer from \"./rootReducer\";\r\nimport storePersist from \"./storePersist\";\r\n\r\nconst logger = createLogger();\r\nlet middleware = [thunk];\r\n\r\nlet configStore = applyMiddleware(...middleware);\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  middleware = [...middleware, logger];\r\n  configStore = composeEnhancers(applyMiddleware(...middleware));\r\n}\r\n\r\nconst initialState = storePersist.get(\"auth\")\r\n  ? { auth: storePersist.get(\"auth\") }\r\n  : {};\r\n\r\nconst store = createStore(rootReducer, initialState, configStore);\r\n\r\nexport default store;\r\n","import React, { useEffect, useState, Suspense } from \"react\";\r\nimport { Router as RouterHistory } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport Router from \"@/router\";\r\nimport history from \"@/utils/history\";\r\nimport store from \"@/redux/store\";\r\n\r\nimport { Button, Result } from \"antd\";\r\n\r\n\r\nfunction App() {\r\n \r\n    return (\r\n      <RouterHistory history={history}>\r\n        <Provider store={store}>\r\n          <Router />\r\n        </Provider>\r\n      </RouterHistory>\r\n    );\r\n  }\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker === null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType !== null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\n// import \"./index.css\";\r\nimport App from \"./app\"\r\nimport \"./style/app.less\"\r\nimport * as serviceWorker from \"./serviceWorker\"\r\n\r\nconsole.log(\"process env\", process.env.NODE_ENV)\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n","export const API_BASE_URL = \"http://api-pil.site/api/admin/\";\r\n\r\nexport const ACCESS_TOKEN_NAME = \"x-auth-token\";\r\n\r\nconsole.log(\"API_BASE_URL:\", API_BASE_URL);\r\n\r\n","export const FAILED_REQUEST = \"AUTH_FAILED_REQUEST\";\r\nexport const LOADING_REQUEST = \"AUTH_LOADING_REQUEST\";\r\n\r\nexport const LOGIN_SUCCESS = \"AUTH_LOGIN_SUCCESS\";\r\n\r\nexport const LOGOUT_SUCCESS = \"AUTH_LOGOUT_SUCCESS\";\r\n"],"sourceRoot":""}