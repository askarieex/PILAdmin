{"version":3,"sources":["redux/auth/actions.js","../node_modules/@ant-design/icons-svg/es/asn/LockOutlined.js","../node_modules/@ant-design/icons/es/icons/LockOutlined.js","pages/Login.jsx"],"names":["login","loginAdminData","dispatch","a","type","actionTypes","payload","loading","authService","data","console","log","success","authValue","current","result","admin","isLoggedIn","storePersist","set","notification","message","description","name","history","push","msg","error","logout","LockOutlined","props","ref","React","AntdIcon","_objectSpread","icon","LockOutlinedSvg","displayName","Content","Layout","Footer","LoginPage","isLoading","useSelector","selectAuth","useDispatch","className","span","offset","style","padding","maxWidth","margin","textAlign","marginBottom","marginTop","src","alt","width","height","initialValues","remember","onFinish","values","Item","rules","required","prefix","UserOutlined","placeholder","autoComplete","valuePropName","noStyle","htmlType","href"],"mappings":"2PAMaA,EAAQ,SAACC,GAAD,8CAAoB,WAAOC,GAAP,iBAAAC,EAAA,6DACvCD,EAAS,CACPE,KAAMC,IACNC,QAAS,CAAEC,SAAS,KAHiB,kBAOlBC,IAAkBP,GAPA,OAO/BQ,EAP+B,OAQrCC,QAAQC,IAAIF,GACRA,EAAKG,SACDC,EAAY,CAChBC,QAASL,EAAKM,OAAOC,MACrBT,SAAS,EACTU,YAAY,GAIdC,IAAaC,IAAI,OAAQN,GAGzBX,EAAS,CACPE,KAAMC,IACNC,QAASG,EAAKM,OAAOC,QAIvBI,IAAaR,QAAQ,CACnBS,QAAS,mBACTC,YAAY,iBAAD,OAAmBb,EAAKM,OAAOC,MAAMO,MAAQ,QAA7C,OAIbC,IAAQC,KAAK,OAGbvB,EAAS,CACPE,KAAMC,IACNC,QAAS,CAAEoB,IAAKjB,EAAKiB,KAAO,4CAI9BN,IAAaO,MAAM,CACjBN,QAAS,eACTC,YAAab,EAAKiB,KAAO,4CA3CQ,gDAgDrCxB,EAAS,CACPE,KAAMC,IACNC,QAAS,CAAEoB,IAAK,2DAIlBN,IAAaO,MAAM,CACjBN,QAAS,cACTC,YAAa,0DAxDsB,yDAApB,uDA6DRM,EAAS,yDAAM,WAAO1B,GAAP,SAAAC,EAAA,+EAElBK,MAFkB,OAKxBN,EAAS,CACPE,KAAMC,MAIRe,IAAaR,QAAQ,CACnBS,QAAS,aACTC,YAAa,2CAIfE,IAAQC,KAAK,UAhBW,gDAmBxBL,IAAaO,MAAM,CACjBN,QAAS,eACTC,YAAa,iEArBS,yDAAN,wD,yICjEPO,EADI,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,2VAA+V,KAAQ,OAAQ,MAAS,Y,QCM9gBA,EAAe,SAAsBC,EAAOC,GAC9C,OAAoBC,gBAAoBC,IAAUC,YAAcA,YAAc,GAAIJ,GAAQ,GAAI,CAC5FC,IAAKA,EACLI,KAAMC,MAIVP,EAAaQ,YAAc,eACCL,mBAAiBH,G,kCCRrCS,EAAoBC,IAApBD,QAASE,EAAWD,IAAXC,OA+FFC,UA7FG,WAChB,IAAiBC,EAAcC,YAAYC,KAAnCrC,QACFL,EAAW2C,cAMjB,OACE,mCACE,eAAC,IAAD,CAAQC,UAAU,SAAlB,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAKC,KAAM,GAAIC,OAAQ,EAAvB,SACE,eAACV,EAAD,CACEW,MAAO,CACLC,QAAS,eACTC,SAAU,QACVC,OAAQ,SACRC,UAAW,UALf,UASE,qBAAKJ,MAAO,CAAEK,aAAc,OAAQC,UAAU,QAA9C,SACE,qBACEC,IAAI,gBACJC,IAAI,OACJR,MAAO,CAAES,MAAO,QAASC,OAAQ,YAKrC,6CACA,cAAC,IAAD,IAGA,qBAAKb,UAAU,sBAAf,SACE,eAAC,IAAD,CACEvB,KAAK,eACLuB,UAAU,aACVc,cAAe,CAAEC,UAAU,GAC3BC,SApCC,SAACC,GAChB7D,EAASF,YAAM+D,KA+BH,UAME,cAAC,IAAKC,KAAN,CACEzC,KAAK,QACL0C,MAAO,CAAC,CAAEC,UAAU,EAAM7C,QAAS,6BAFrC,SAIE,cAAC,IAAD,CACE8C,OAAQ,cAACC,EAAA,EAAD,CAActB,UAAU,wBAChCuB,YAAY,iBACZC,aAAa,UAGjB,cAAC,IAAKN,KAAN,CACEzC,KAAK,WACL0C,MAAO,CAAC,CAAEC,UAAU,EAAM7C,QAAS,gCAFrC,SAIE,cAAC,IAAD,CACE8C,OAAQ,cAAC,EAAD,CAAcrB,UAAU,wBAChC1C,KAAK,WACLiE,YAAY,SACZC,aAAa,UAGjB,cAAC,IAAKN,KAAN,UACE,cAAC,IAAKA,KAAN,CAAWzC,KAAK,WAAWgD,cAAc,UAAUC,SAAO,EAA1D,SACE,cAAC,IAAD,8BAIJ,cAAC,IAAKR,KAAN,UACE,cAAC,IAAD,CACE5D,KAAK,UACLqE,SAAS,SACT3B,UAAU,oBACVvC,QAASmC,EAJX,kCAeZ,eAACF,EAAD,CAAQS,MAAO,CAAEI,UAAW,UAA5B,gEACgD,mBAAGqB,KAAK,uBAAR","file":"static/js/LoginPage.65c995f1.chunk.js","sourcesContent":["import * as actionTypes from \"./types\";\r\nimport * as authService from \"@/auth\";\r\nimport storePersist from \"@/redux/storePersist\";\r\nimport history from \"@/utils/history\";\r\nimport { notification } from \"antd\";\r\n\r\nexport const login = (loginAdminData) => async (dispatch) => {\r\n  dispatch({\r\n    type: actionTypes.LOADING_REQUEST,\r\n    payload: { loading: true },\r\n  });\r\n\r\n  try {\r\n    const data = await authService.login(loginAdminData);\r\n    console.log(data)\r\n    if (data.success) {\r\n      const authValue = {\r\n        current: data.result.admin,\r\n        loading: false,\r\n        isLoggedIn: true,\r\n      };\r\n\r\n      // Store auth value persistently\r\n      storePersist.set(\"auth\", authValue);\r\n\r\n      // Dispatch success action\r\n      dispatch({\r\n        type: actionTypes.LOGIN_SUCCESS,\r\n        payload: data.result.admin,\r\n      });\r\n\r\n      // Show success notification\r\n      notification.success({\r\n        message: \"Login Successful\",\r\n        description: `Welcome back, ${data.result.admin.name || \"Admin\"}!`,\r\n      });\r\n\r\n      // Redirect to dashboard\r\n      history.push(\"/\");\r\n    } else {\r\n      // Dispatch failure action\r\n      dispatch({\r\n        type: actionTypes.FAILED_REQUEST,\r\n        payload: { msg: data.msg || \"Invalid credentials. Please try again.\" },\r\n      });\r\n\r\n      // Show error notification\r\n      notification.error({\r\n        message: \"Login Failed\",\r\n        description: data.msg || \"Invalid credentials. Please try again.\",\r\n      });\r\n    }\r\n  } catch (error) {\r\n    // Dispatch failure action for unexpected errors\r\n    dispatch({\r\n      type: actionTypes.FAILED_REQUEST,\r\n      payload: { msg: \"An unexpected error occurred. Please try again later.\" },\r\n    });\r\n\r\n    // Show error notification\r\n    notification.error({\r\n      message: \"Login Error\",\r\n      description: \"An unexpected error occurred. Please try again later.\",\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n  try {\r\n    await authService.logout();\r\n\r\n    // Dispatch logout success\r\n    dispatch({\r\n      type: actionTypes.LOGOUT_SUCCESS,\r\n    });\r\n\r\n    // Show success notification\r\n    notification.success({\r\n      message: \"Logged Out\",\r\n      description: \"You have been successfully logged out.\",\r\n    });\r\n\r\n    // Redirect to login\r\n    history.push(\"/login\");\r\n  } catch (error) {\r\n    // Show error notification on logout failure\r\n    notification.error({\r\n      message: \"Logout Error\",\r\n      description: \"An error occurred while logging out. Please try again later.\",\r\n    });\r\n  }\r\n};\r\n","// This icon file is generated automatically.\nvar LockOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M832 464h-68V240c0-70.7-57.3-128-128-128H388c-70.7 0-128 57.3-128 128v224h-68c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V496c0-17.7-14.3-32-32-32zM332 240c0-30.9 25.1-56 56-56h248c30.9 0 56 25.1 56 56v224H332V240zm460 600H232V536h560v304zM484 701v53c0 4.4 3.6 8 8 8h40c4.4 0 8-3.6 8-8v-53a48.01 48.01 0 10-56 0z\" } }] }, \"name\": \"lock\", \"theme\": \"outlined\" };\nexport default LockOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport LockOutlinedSvg from \"@ant-design/icons-svg/es/asn/LockOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar LockOutlined = function LockOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: LockOutlinedSvg\n  }));\n};\n\nLockOutlined.displayName = 'LockOutlined';\nexport default /*#__PURE__*/React.forwardRef(LockOutlined);","import React from \"react\";\r\nimport { Form, Input, Button, Checkbox, Layout, Row, Col, Divider } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { login } from \"@/redux/auth/actions\";\r\nimport { selectAuth } from \"@/redux/auth/selectors\";\r\n\r\nconst { Content, Footer } = Layout;\r\n\r\nconst LoginPage = () => {\r\n  const { loading: isLoading } = useSelector(selectAuth);\r\n  const dispatch = useDispatch();\r\n\r\n  const onFinish = (values) => {\r\n    dispatch(login(values));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Layout className=\"layout\">\r\n        <Row>\r\n          <Col span={12} offset={6}>\r\n            <Content\r\n              style={{\r\n                padding: \"50px 0 180px\",\r\n                maxWidth: \"360px\",\r\n                margin: \"0 auto\",\r\n                textAlign: \"center\", // Center align the content\r\n              }}\r\n            >\r\n              {/* Logo Section */}\r\n              <div style={{ marginBottom: \"20px\" ,marginTop:\"50px\"}}>\r\n                <img\r\n                  src=\"/nav-logo.png\"\r\n                  alt=\"Logo\"\r\n                  style={{ width: \"400px\", height: \"auto\" }}\r\n                />\r\n              </div>\r\n\r\n              {/* Login Header */}\r\n              <h1>Admin Login</h1>\r\n              <Divider />\r\n\r\n              {/* Login Form */}\r\n              <div className=\"site-layout-content\">\r\n                <Form\r\n                  name=\"normal_login\"\r\n                  className=\"login-form\"\r\n                  initialValues={{ remember: true }}\r\n                  onFinish={onFinish}\r\n                >\r\n                  <Form.Item\r\n                    name=\"email\"\r\n                    rules={[{ required: true, message: \"Please input your Email!\" }]}\r\n                  >\r\n                    <Input\r\n                      prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                      placeholder=\"admin@demo.com\"\r\n                      autoComplete=\"off\"\r\n                    />\r\n                  </Form.Item>\r\n                  <Form.Item\r\n                    name=\"password\"\r\n                    rules={[{ required: true, message: \"Please input your Password!\" }]}\r\n                  >\r\n                    <Input\r\n                      prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                      type=\"password\"\r\n                      placeholder=\"123456\"\r\n                      autoComplete=\"off\"\r\n                    />\r\n                  </Form.Item>\r\n                  <Form.Item>\r\n                    <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n                      <Checkbox>Remember me</Checkbox>\r\n                    </Form.Item>\r\n                  </Form.Item>\r\n\r\n                  <Form.Item>\r\n                    <Button\r\n                      type=\"primary\"\r\n                      htmlType=\"submit\"\r\n                      className=\"login-form-button\"\r\n                      loading={isLoading}\r\n                    >\r\n                      Log in\r\n                    </Button>\r\n                  </Form.Item>\r\n                </Form>\r\n              </div>\r\n            </Content>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Footer style={{ textAlign: \"center\" }}>\r\n        Powered by AlgoDream Technical Services | ©2025 <a href=\"https://algodream.in\">ADTS</a>\r\n        </Footer>\r\n      </Layout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"sourceRoot":""}